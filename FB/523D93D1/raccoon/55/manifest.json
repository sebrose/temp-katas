{"Coordinate.cs":"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace Shouty\n{\n    public class Coordinate\n    {\n        private readonly int xCoord;\n        private readonly int yCoord;\n\n        public Coordinate(int xCoord, int yCoord)\n        {\n            this.xCoord = xCoord;\n            this.yCoord = yCoord;\n        }\n\n        public int DistanceFrom(Coordinate other)\n        {\n//         TODO: actually calculate distance. I think we need to use pythagoras' theorem?\n//            return 0;\n\n            int xDiff = xCoord - other.xCoord;\n            int yDiff = yCoord - other.yCoord;\n\n            return (int) Math.Sqrt(Math.Pow(xDiff, 2) + Math.Pow(yDiff, 2));\n\n        }\n    }\n}","CoordinateTest.cs":"using System;\nusing Shouty;\nusing NUnit.Framework;\n\nnamespace Shouty.Tests\n{\n    [TestFixture]\n    public class CoordinateTest\n    {\n        [Test]\n        public void ItCalculatesTheDistanceFromItself()\n        {\n            Coordinate a = new Coordinate(0, 0);\n            Assert.AreEqual(0, a.DistanceFrom(a));\n        }\n\n        [Test]\n        public void ItCalculatesTheDistanceFromAnotherCoordinateAlongXAxis()\n        {\n            Coordinate a = new Coordinate(0, 0);\n            Coordinate b = new Coordinate(1000, 0);\n            Assert.AreEqual(1000, a.DistanceFrom(b));\n        }\n    }\n}\n","HearShout.feature":"Background:\n  Given Lucy is at 0, 0\n\nFeature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\n  Scenario Outline: only hear in-range shouts\n    Given Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <what-Lucy-hears>\n    \n    Examples: some simpe examples\n    | Seans-location | what-Lucy-hears |\n    | 0, 900 | Sean |\n    | 0, 1100 | nothing |\n\n    Examples: some other examples\n    | Seans-location | what-Lucy-hears |\n    | 0, 123 | Sean |\n    | 0, 1001 | nothing |\n\n#  Scenario: Multiple shouts from one person\n#    Given Sean is at 0, 500\n#    When Sean shouts\n#    And Sean shouts\n#    Then Lucy should hear 2 shouts from Sean\n\n  Scenario: Multiple shouters\n    Given people are located at\n      | name  | x   | y    |\n      | Sean  | 500 | 0    |\n      | Oscar | 0   | 1100 |\n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should not hear Oscar\n    And Sean should not hear Sean\n    And Oscar should not hear Oscar\n    But Lucy should hear Sean\n","RunTests.dll.config":"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<configuration>\n  <configSections>\n    <section name=\"specFlow\"\n      type=\"TechTalk.SpecFlow.Configuration.ConfigurationSectionHandler, TechTalk.SpecFlow\"/>\n  </configSections>\n  <specFlow>\n    <unitTestProvider name=\"NUnit\" />\n    <runtime \n        missingOrPendingStepsOutcome=\"Error\" />\n  </specFlow>\n</configuration>\n","ShoutSteps.cs":"using System;\nusing TechTalk.SpecFlow;\nusing TechTalk.SpecFlow.Assist;\nusing Shouty;\nusing NUnit.Framework;\n\nnamespace Shouty.Specs\n{\n\n\n    [Binding]\n    public class ShoutSteps\n    {\n        private const string ARBITRARY_MESSAGE = \"Hello, world\";\n        private readonly ShoutyHelper _shoutyHelper; \n\n        public ShoutSteps (ShoutyNetwork  shoutyInstance)\n        {\n             _shoutyHelper.shoutyReference  = shoutyInstance;\n        }\n\n        [When(@\"(Sean|Oscar) shouts\")]\n        public void WhenPersonShouts(string person)\n        {\n            _shoutyHelper.shoutyReference.Shout(person, ARBITRARY_MESSAGE);\n        }\n\n        [Then(@\"(Lucy|Sean|Oscar) should not hear (Sean|Oscar)\")]\n        public void ThenListenerShouldNotHearShouter(string listener, string shouter)\n        {\n            Assert.IsFalse(_shoutyHelper.shoutyReference.GetMessagesHeardBy(listener).ContainsKey(shouter));\n        }\n\n        [Then(@\"Lucy should hear (Sean|Oscar)\")]\n        public void ThenLucyShouldHearPerson(string person)\n        {\n            Assert.IsTrue(_shoutyHelper.shoutyReference.GetMessagesHeardBy(\"Lucy\").ContainsKey(person));\n        }\n\n        [Then(@\"Lucy should hear (.*) shouts from Sean\")]\n        public void ThenLucyShouldHearShoutsFromSean(int p0)\n        {\n            ScenarioContext.Current.Pending();\n        }\n\n        [Then(@\"Lucy should hear nothing\")]\n        public void ThenLucyShouldHearNothing()\n        {\n            Assert.AreEqual(0, _shoutyHelper.shoutyReference.GetMessagesHeardBy(\"Lucy\").Count);\n        }\n\n    }\n}\n","ShoutyNetwork.cs":"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Shouty\n{\n    public class ShoutyNetwork\n    {\n        private readonly Dictionary<string, Coordinate> locationsByPerson = new Dictionary<string, Coordinate>();\n        private readonly Dictionary<string, string> messagesByPerson = new Dictionary<string, string>();\n        private const int MESSAGE_RANGE = 1000;\n\n        public void SetLocation(string personName, Coordinate coordinate)\n        {\n            locationsByPerson.Add(personName, coordinate);\n        }\n\n        public void Shout(string shouterName, string message)\n        {\n             messagesByPerson.Add(shouterName, message);\n        }\n\n        public IDictionary<string, string> GetMessagesHeardBy(string listenerName)\n        {\n            var result = new Dictionary<string, string>();\n\n            foreach (var shout in messagesByPerson)\n            {\n                var shouter = shout.Key;\n                var message = shout.Value;\n\n                int distance = locationsByPerson[shouter]\n                    .DistanceFrom(locationsByPerson[listenerName]);\n\n                if (distance < MESSAGE_RANGE && shouter != listenerName)\n                    result.Add(shouter, message);\n            }\n\n            return result;\n        }\n    }\n}","cyber-dojo.sh":"#!/bin/bash\n\n# build project file\nCSPROJ=RunTests.csproj\n\necho \"<Project xmlns=\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\">\" > $CSPROJ\necho \"  <ItemGroup>\" >> $CSPROJ\n\nfor f in *.feature\ndo\n  echo \"    <None Include=\\\"$f\\\">\" >> $CSPROJ\n  echo \"      <Generator>SpecFlowSingleFileGenerator</Generator>\" >> $CSPROJ\n  echo \"      <LastGenOutput>$f.cs</LastGenOutput>\" >> $CSPROJ\n  echo \"    </None>\" >> $CSPROJ\ndone\n\necho \"  </ItemGroup>\" >> $CSPROJ\necho \"  <ItemGroup>\" >> $CSPROJ\necho \"    <None Include=\\\"RunTests.dll.config\\\" />\" >> $CSPROJ\necho \"  </ItemGroup>\" >> $CSPROJ\necho \"</Project>\" >> $CSPROJ\n\nNUNIT_PATH=/nunit/NUnit.2.6.2/lib\nexport MONO_PATH=${NUNIT_PATH}\n\n# generate 'code behind'\nmono /specflow/specflow.exe generateall RunTests.csproj\n\nmcs -t:library \\\n  -r:/usr/lib/mono/SpecFlow/TechTalk.SpecFlow.dll \\\n  -r:${NUNIT_PATH}/nunit.framework.dll \\\n  -out:RunTests.dll *.cs\n\nif [ $? -eq 0 ]; then\n  NUNIT_RUNNERS_PATH=/nunit/NUnit.Runners.2.6.1/tools\n  mono ${NUNIT_RUNNERS_PATH}/nunit-console.exe -nologo ./RunTests.dll\nfi\n","output":"WARNING: The runtime version supported by this application is unavailable.\nUsing default runtime: v4.0.30319\nCompilation succeeded - 2 warning(s)\nProcessModel: Default    DomainUsage: Single\nExecution Runtime: mono-4.0\n...Given Lucy is at 0, 0\n-> error: Exception has been thrown by the target of an invocation.\nGiven people are located at\n  --- table step argument ---\n  | name  | x   | y    |\n  | Sean  | 500 | 0    |\n  | Oscar | 0   | 1100 |\n-> skipped because of previous errors\nWhen Sean shouts\n-> skipped because of previous errors\nAnd Oscar shouts\n-> skipped because of previous errors\nThen Lucy should not hear Oscar\n-> skipped because of previous errors\nAnd Sean should not hear Sean\n-> skipped because of previous errors\nAnd Oscar should not hear Oscar\n-> skipped because of previous errors\nBut Lucy should hear Sean\n-> skipped because of previous errors\nF.Given Lucy is at 0, 0\n-> error: Exception has been thrown by the target of an invocation.\nGiven Sean is at 0, 900\n-> skipped because of previous errors\nWhen Sean shouts\n-> skipped because of previous errors\nThen Lucy should hear Sean\n-> skipped because of previous errors\nF.Given Lucy is at 0, 0\n-> error: Exception has been thrown by the target of an invocation.\nGiven Sean is at 0, 1100\n-> skipped because of previous errors\nWhen Sean shouts\n-> skipped because of previous errors\nThen Lucy should hear nothing\n-> skipped because of previous errors\nF.Given Lucy is at 0, 0\n-> error: Exception has been thrown by the target of an invocation.\nGiven Sean is at 0, 123\n-> skipped because of previous errors\nWhen Sean shouts\n-> skipped because of previous errors\nThen Lucy should hear Sean\n-> skipped because of previous errors\nF.Given Lucy is at 0, 0\n-> error: Exception has been thrown by the target of an invocation.\nGiven Sean is at 0, 1001\n-> skipped because of previous errors\nWhen Sean shouts\n-> skipped because of previous errors\nThen Lucy should hear nothing\n-> skipped because of previous errors\nF\nTests run: 7, Errors: 5, Failures: 0, Inconclusive: 0, Time: 0.453479 seconds\n  Not run: 0, Invalid: 0, Ignored: 0, Skipped: 0\n\nErrors and Failures:\n1) Test Error : SpecFlow.GeneratedTests.HearShoutFeature.MultipleShouters\n   System.Reflection.TargetInvocationException : Exception has been thrown by the target of an invocation.\n  ----> System.NullReferenceException : Object reference not set to an instance of an object\n  at System.Reflection.MonoCMethod.InternalInvoke (System.Object obj, System.Object[] parameters) [0x00019] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at System.Reflection.MonoCMethod.DoInvoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00089] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at System.Reflection.MonoCMethod.Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at System.Reflection.ConstructorInfo.Invoke (System.Object[] parameters) [0x00000] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at BoDi.ObjectContainer.CreateObject (System.Type type, System.Collections.Generic.IEnumerable`1[T] resolutionPath, BoDi.ObjectContainer+RegistrationKey keyToResolve) [0x000c9] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer+TypeRegistration.Resolve (BoDi.ObjectContainer container, BoDi.ObjectContainer+RegistrationKey keyToResolve, System.Collections.Generic.IEnumerable`1[T] resolutionPath) [0x00043] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer.CreateObjectFor (BoDi.ObjectContainer+RegistrationKey keyToResolve, System.Collections.Generic.IEnumerable`1[T] resolutionPath) [0x00056] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer.Resolve (System.Type typeToResolve, System.Collections.Generic.IEnumerable`1[T] resolutionPath, System.String name) [0x0001f] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer.Resolve (System.Type typeToResolve, System.String name) [0x00007] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.ScenarioContext.GetBindingInstance (System.Type bindingType) [0x00000] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at (wrapper dynamic-method) System.Object:lambda_method (System.Runtime.CompilerServices.Closure,TechTalk.SpecFlow.Infrastructure.IContextManager,string,int,int)\n  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&)\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00038] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding (TechTalk.SpecFlow.Bindings.IBinding binding, TechTalk.SpecFlow.Infrastructure.IContextManager contextManager, System.Object[] arguments, TechTalk.SpecFlow.Tracing.ITestTracer testTracer, System.TimeSpan& duration) [0x000ea] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch (TechTalk.SpecFlow.Bindings.BindingMatch match, System.Object[] arguments) [0x00012] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () [0x001f5] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () [0x00000] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at SpecFlow.GeneratedTests.HearShoutFeature.ScenarioCleanup () [0x00000] in <3fbc09dbbf144e8989ad226cc9398426>:0 \n  at SpecFlow.GeneratedTests.HearShoutFeature.MultipleShouters () [0x0011f] in <3fbc09dbbf144e8989ad226cc9398426>:0 \n  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&)\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00038] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n--NullReferenceException\n  at Shouty.Specs.LocationSteps..ctor (Shouty.ShoutyNetwork shoutyInstance) [0x00006] in <3fbc09dbbf144e8989ad226cc9398426>:0 \n  at (wrapper managed-to-native) System.Reflection.MonoCMethod:InternalInvoke (System.Reflection.MonoCMethod,object,object[],System.Exception&)\n  at System.Reflection.MonoCMethod.InternalInvoke (System.Object obj, System.Object[] parameters) [0x00002] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n\n2) Test Error : SpecFlow.GeneratedTests.HearShoutFeature.OnlyHearIn_RangeShouts(\"0, 900\",\"Sean\",null)\n   System.Reflection.TargetInvocationException : Exception has been thrown by the target of an invocation.\n  ----> System.NullReferenceException : Object reference not set to an instance of an object\n  at System.Reflection.MonoCMethod.InternalInvoke (System.Object obj, System.Object[] parameters) [0x00019] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at System.Reflection.MonoCMethod.DoInvoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00089] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at System.Reflection.MonoCMethod.Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at System.Reflection.ConstructorInfo.Invoke (System.Object[] parameters) [0x00000] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at BoDi.ObjectContainer.CreateObject (System.Type type, System.Collections.Generic.IEnumerable`1[T] resolutionPath, BoDi.ObjectContainer+RegistrationKey keyToResolve) [0x000c9] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer+TypeRegistration.Resolve (BoDi.ObjectContainer container, BoDi.ObjectContainer+RegistrationKey keyToResolve, System.Collections.Generic.IEnumerable`1[T] resolutionPath) [0x00043] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer.CreateObjectFor (BoDi.ObjectContainer+RegistrationKey keyToResolve, System.Collections.Generic.IEnumerable`1[T] resolutionPath) [0x00056] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer.Resolve (System.Type typeToResolve, System.Collections.Generic.IEnumerable`1[T] resolutionPath, System.String name) [0x0001f] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at BoDi.ObjectContainer.Resolve (System.Type typeToResolve, System.String name) [0x00007] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.ScenarioContext.GetBindingInstance (System.Type bindingType) [0x00000] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at (wrapper dynamic-method) System.Object:lambda_method (System.Runtime.CompilerServices.Closure,TechTalk.SpecFlow.Infrastructure.IContextManager,string,int,int)\n  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&)\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00038] in <dca3b561b8ad4f9fb10141d81b39ff45>:0 \n  at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding (TechTalk.SpecFlow.Bindings.IBinding binding, TechTalk.SpecFlow.Infrastructure.IContextManager contextManager, System.Object[] arguments, TechTalk.SpecFlow.Tracing.ITestTracer testTracer, System.TimeSpan& duration) [0x000ea] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch (TechTalk.SpecFlow.Bindings.BindingMatch match, System.Object[] arguments) [0x00012] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () [0x001f5] in <275232c0d74f41b78aee428ed79db9f2>:0 \n  at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () [0x00000] in <275232c0d74f41b78aee428ed7\noutput truncated by cyber-dojoLocationSteps.cs(12,38): warning CS0649: Field `Shouty.Specs.LocationSteps._shoutyHelper' is never assigned to, and will always have its default value `null'\nShoutSteps.cs(15,39): warning CS0649: Field `Shouty.Specs.ShoutSteps._shoutyHelper' is never assigned to, and will always have its default value `null'\n","LocationSteps.cs":"using System;\nusing TechTalk.SpecFlow;\nusing TechTalk.SpecFlow.Assist;\nusing Shouty;\nusing NUnit.Framework;\n\nnamespace Shouty.Specs\n{\n    [Binding]\n    public class LocationSteps\n    {\n       private readonly ShoutyHelper _shoutyHelper; \n\n        public LocationSteps(ShoutyNetwork  shoutyInstance)\n        {\n        \t_shoutyHelper.shoutyReference = shoutyInstance;\n        }\n \n\n        public class Coordinates\n        {\n            public string name { get; set; }\n            public int X { get; set; }\n            public int Y { get; set; }\n        }\n\n\n\n        [Given(@\"(Lucy|Sean|Oscar) is at (.*), (.*)\")]\n        public void GivenPersonIsAt(string person, int xCoord, int yCoord)\n        {\n            _shoutyHelper.shoutyReference.SetLocation(person, new Coordinate(xCoord, yCoord));\n        }\n\n\n        [Given(@\"people are located at\")]\n        public void GivenPeopleAreLocatedAt(Table table)\n        {\n            var coordinates = table.CreateSet<Coordinates>();   \n            foreach (var row in coordinates)\n            {\n                _shoutyHelper.shoutyReference.SetLocation(row.name, new Coordinate(row.X, row.Y));\n            }\n        }\n    }\n}\n","ShoutyHelper.cs":"\nnamespace Shouty\n{\n    public class ShoutyHelper\n    {\n        public ShoutyHelper()\n        {\n            shoutyReference = new ShoutyNetwork();\n        }\n    \n        public ShoutyNetwork shoutyReference { get; set; }\n    }\n}\n"}