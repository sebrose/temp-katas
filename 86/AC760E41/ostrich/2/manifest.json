{"HikerTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class HikerTest {\n\n    @Test\n    public void life_the_universe_and_everything() {\n        int expected = 42;\n        int actual = Hiker.answer();\n        assertEquals(expected, actual);\n    }\n}\n","Hiker.java":"\npublic class Hiker {\n\n    public static int answer() {\n        return 6 * \n    }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"Hiker.java:6: error: illegal start of expression\n    }\n    ^\nHiker.java:7: error: reached end of file while parsing\n}\n ^\n2 errors\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n"}