{"Coordinate.java":"public class Coordinate {\n  private int x;\n  private int y;\n\n  public Coordinate(int xCoord, int yCoord){\n    x = xCoord;\n    y = yCoord;\n  }\n\n  public int distanceFrom(Coordinate other){\n    // TODO: actually calculate distance beteen the coordinates.\n    //       e.g. return Math.abs(x - other.x);\n\n    return 0;\n  }\n}\n","CoordinateTest.java":"import static org.junit.Assert.assertEquals;\nimport org.junit.Test;\n\npublic class CoordinateTest {\n  @Test\n  public void itCalculatesTheDistanceFromItself() {\n      Coordinate a = new Coordinate(0, 0);\n      assertEquals(0, a.distanceFrom(a));\n  }\n\n  @Test\n  public void itCalculatesTheDistanceFromAnotherCoordinateAlongXAxis() {\n      Coordinate a = new Coordinate(0, 0);\n      Coordinate b = new Coordinate(600, 0);\n      assertEquals(600, a.distanceFrom(b));\n  }\n\n  // @Test\n  // public void itCalculatesTheDistanceFromAnotherCoordinate() {\n  //     Coordinate a = new Coordinate(0, 0);\n  //     Coordinate b = new Coordinate(300, 400);\n  //     assertEquals(500, a.distanceFrom(b));\n  // }\n}\n","RunCukesTest.java":"import cucumber.api.junit.Cucumber;\nimport cucumber.api.CucumberOptions;\nimport cucumber.api.SnippetType;\nimport org.junit.runner.RunWith;\n\n@RunWith(Cucumber.class)\n@CucumberOptions(strict=true, monochrome=true, format=\"junit:output\", snippets=SnippetType.CAMELCASE)\npublic class RunCukesTest {\n    // this is the adapter/bridge code\n    // between cucumber jvm and junit\n    // you do not need to edit this\n}\n","ShoutSteps.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport cucumber.api.java.en.*;\nimport cucumber.api.PendingException;\n\npublic class ShoutSteps {\n    private final String ARBITRARY_MESSAGE = \"Hello, world\";\n    private final Shouty shouty = new Shouty();\n\n    @Given(\"^Lucy is at (\\\\d+), (\\\\d+)$\")\n    public void lucyIsAt(int xCoord, int yCoord) throws Throwable {\n        shouty.setLocation(\"Lucy\", new Coordinate(xCoord, yCoord));\n    }\n\n    @Given(\"^Sean is at (\\\\d+), (\\\\d+)$\")\n    public void seanIsAt(int xCoord, int yCoord) throws Throwable {\n        shouty.setLocation(\"Sean\", new Coordinate(xCoord, yCoord));\n    }\n\n    @When(\"^Sean shouts$\")\n    public void seanShouts() throws Throwable {\n        shouty.shout(\"Sean\", ARBITRARY_MESSAGE);\n    }\n\n    @Then(\"^Lucy should hear Sean$\")\n    public void lucyShouldHearHim() throws Throwable {\n        Assert.assertEquals(1, shouty.getShoutsHeardBy(\"Lucy\").size());\n    }\n\n    @Then(\"^Lucy should hear nothing$\")\n    public void lucy_should_hear_nothing() throws Throwable {\n        Assert.assertEquals(0, shouty.getShoutsHeardBy(\"Lucy\").size());\n    }\n}\n","Shouty.java":"import java.util.*;\n\npublic class Shouty {\n  private static final int MESSAGE_RANGE = 1000;\n  private Map<String, Coordinate> locations = new HashMap<String, Coordinate>();\n  private Map<String, List<String> > shouts = new HashMap<String, List<String> >();\n\n  public void setLocation(String person, Coordinate location) {\n      locations.put(person, location);\n  }\n\n  public void shout(String shouter, String shout) {\n      if (!shouts.containsKey(shouter)) {\n          List<String> personsShouts = new ArrayList<String>();\n          shouts.put(shouter, personsShouts);\n      }\n\n      shouts.get(shouter).add(shout);\n  }\n\n  public Map<String, List<String> > getShoutsHeardBy(String listener) {\n      HashMap<String, List<String> > shoutsHeard = new HashMap<String, List<String> >();\n\n      for (Map.Entry<String, List<String> > entry : shouts.entrySet()) {\n          String shouter = entry.getKey();\n          List<String> personsShouts = entry.getValue();\n          int distance = locations.get(listener).distanceFrom(locations.get(shouter));\n          if (distance < MESSAGE_RANGE)\n              shoutsHeard.put(shouter, personsShouts);\n      }\n\n      return shoutsHeard;\n  }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /cucumber/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nls -l /cucumber\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi\n","cucumber.xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\">\n\n    <bean class=\"Shouty\" autowire-candidate=\"true\" />\n\n    <context:annotation-config/>\n\n</beans>\n","hear_shout.feature":"Feature: Hearing a shout\n\n    Shouts have a range of approximately 1000 metres\n\n    Scenario: In range shout is heard\n        Given Lucy is at 0, 0\n        And Sean is at 0, 900\n        When Sean shouts\n        Then Lucy should hear Sean\n\n      Scenario: Out of range shout is not heard\n        Given Lucy is at 0, 0\n        And Sean is at 800, 800\n        When Sean shouts\n        Then Lucy should hear nothing\n","output":"total 9144\n-rw-rw-r-- 1 root root    4467 Nov 11  2017 aopalliance-1.0.jar\n-rw-rw-r-- 1 root root   61829 Nov 11  2017 commons-logging-1.2.jar\n-rw-rw-r-- 1 root root  225237 Nov 11  2017 cucumber-core-1.2.4.jar\n-rw-rw-r-- 1 root root   38706 Nov 11  2017 cucumber-html-0.2.3.jar\n-rw-rw-r-- 1 root root  237156 Nov 11  2017 cucumber-java-1.2.4.jar\n-rw-rw-r-- 1 root root   18861 Nov 11  2017 cucumber-junit-1.2.4.jar\n-rw-rw-r-- 1 root root  603806 Nov 11  2017 cucumber-jvm-deps-1.0.5.jar\n-rw-rw-r-- 1 root root   10222 Nov 11  2017 cucumber-spring-1.2.4.jar\n-rw-rw-r-- 1 root root 1750919 Nov 11  2017 gherkin-2.12.2.jar\n-rw-rw-r-- 1 root root   45024 Nov 11  2017 hamcrest-core-1.3.jar\n-rw-rw-r-- 1 root root  182977 Nov 11  2017 jmock-2.6.0.jar\n-rw-rw-r-- 1 root root   13306 Nov 11  2017 jmock-junit4-2.6.0.jar\n-rw-rw-r-- 1 root root  314932 Nov 11  2017 junit-4.12.jar\n-rw-rw-r-- 1 root root 1581066 Nov 11  2017 mockito-all-1.9.5.jar\n-rw-rw-r-- 1 root root  379821 Nov 11  2017 spring-aop-4.3.2.RELEASE.jar\n-rw-rw-r-- 1 root root  757134 Nov 11  2017 spring-beans-4.3.2.RELEASE.jar\n-rw-rw-r-- 1 root root 1133137 Nov 11  2017 spring-context-4.3.2.RELEASE.jar\n-rw-rw-r-- 1 root root 1110160 Nov 11  2017 spring-core-4.3.2.RELEASE.jar\n-rw-rw-r-- 1 root root  263693 Nov 11  2017 spring-expression-4.3.2.RELEASE.jar\n-rw-rw-r-- 1 root root  591648 Nov 11  2017 spring-test-4.3.2.RELEASE.jar\nJUnit version 4.12\n\nTime: 0\n\nOK (0 tests)\n\nShoutyTypes.java:1: error: cannot find symbol\nimport cucumber.api.TypeRegistry;\n                   ^\n  symbol:   class TypeRegistry\n  location: package cucumber.api\nShoutyTypes.java:2: error: package io.cucumber.cucumberexpressions does not exist\nimport io.cucumber.cucumberexpressions.CaptureGroupTransformer;\n                                      ^\nShoutyTypes.java:3: error: package io.cucumber.cucumberexpressions does not exist\nimport io.cucumber.cucumberexpressions.ParameterType;\n                                      ^\nShoutyTypes.java:4: error: package io.cucumber.datatable does not exist\nimport io.cucumber.datatable.DataTableType;\n                            ^\nShoutyTypes.java:5: error: package io.cucumber.datatable does not exist\nimport io.cucumber.datatable.TableEntryTransformer;\n                            ^\nShoutyTypes.java:11: error: cannot find symbol\npublic class ShoutyTypes implements cucumber.api.TypeRegistryConfigurer {\n                                                ^\n  symbol:   class TypeRegistryConfigurer\n  location: package cucumber.api\nShoutyTypes.java:18: error: cannot find symbol\n    public void configureTypeRegistry(TypeRegistry typeRegistry) {\n                                      ^\n  symbol:   class TypeRegistry\n  location: class ShoutyTypes\nShoutyTypes.java:12: error: method does not override or implement a method from a supertype\n    @Override\n    ^\nShoutyTypes.java:17: error: method does not override or implement a method from a supertype\n    @Override\n    ^\n9 errors\nls: cannot access '*Test*.class': No such file or directory\n","ShoutyTypes.java":"import cucumber.api.TypeRegistry;\nimport io.cucumber.cucumberexpressions.CaptureGroupTransformer;\nimport io.cucumber.cucumberexpressions.ParameterType;\nimport io.cucumber.datatable.DataTableType;\nimport io.cucumber.datatable.TableEntryTransformer;\n\nimport java.util.Locale;\n\nimport static java.lang.Integer.parseInt;\n\npublic class ShoutyTypes implements cucumber.api.TypeRegistryConfigurer {\n    @Override\n    public Locale locale() {\n        return Locale.ENGLISH;\n    }\n\n    @Override\n    public void configureTypeRegistry(TypeRegistry typeRegistry) {\n    }\n\n}"}