{"hiker.feature":"Feature: hitch-hiker playing scrabble\n\n  Scenario: hitch-hiker playing scrabble in the past\n    Given data\n      | H1 | H2 | H3 | H4 | H5 |\n      | 01 | 02 | 03 | 04 | 05 |\n      | 11 | 12 | 13 | 14 | 15 |\n      | 21 | 22 | 23 | 24 | 25 |","hiker.js":"'use strict';\n\nexports.answer = function answer(a, b) {\n  return a * b;\n};\n","hiker_steps.js":"\"use strict\";\n\nvar {defineSupportCode} = require('cucumber');\nvar assert = require('assert');\nvar hiker = require('./hiker');\n\ndefineSupportCode(function (Cucumber) {\n  let score;\n\n  Cucumber.Given(/^the hitch-hiker selects some tiles$/, function () {});\n\n  Cucumber.When(/^they spell (\\d+) times (\\d+)$/, function (a, b) {\n    score = hiker.answer(parseInt(a), parseInt(b));\n  });\n\n  Cucumber.Then(/^the score is (\\d+)$/, function (expectedScore) {\n    assert.equal(score, expectedScore);\n  });\n  \n  Cucumber.Given('data', function (dataTable) {\n    console.log(\"hashes\")\n    console.log(dataTable.hashes().toString())\n    \n    console.log(\"rows\")\n    console.log(dataTable.rows().toString())\n    \n    console.log(\"raw\")\n    console.log(dataTable.raw().toString())\n    \n    console.log(\"rowsHash\")\n    console.log(dataTable.rowsHash().toString())\n    \n  });\n\n});\n","cyber-dojo.sh":"# Change the version of Node.js to use, see https://nodejs.org\n# to see the supported ES6 features see: https://kangax.github.io/compat-table/es6/\n# 4.1.1 supports some ES6 (about 50%) features: https://nodejs.org/en/docs/es6/\n# 0.12.7 is the latest version without most ES6 (about 20%) features: https://nodejs.org/docs/latest-v0.12.x/api/\n#\n# set the version to use:\n#NODE_VERSION=0.12.7\n#NODE_VERSION=4.1.1\n#NODE_VERSION=4.2.1\n#NODE_VERSION=6.11.1\n#NODE_VERSION=8.2.1\nNODE_VERSION=8.4.0\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\nn use ${NODE_VERSION} \\\n  ./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  /sandboxes/$CYBER_DOJO_AVATAR_NAME/*.feature\n","output":"hashes\n[object Object],[object Object],[object Object]\nrows\n01,02,03,04,05,11,12,13,14,15,21,22,23,24,25\nraw\nH1,H2,H3,H4,H5,01,02,03,04,05,11,12,13,14,15,21,22,23,24,25\nrowsHash\nF\n\nFailures:\n\n1) Scenario: hitch-hiker playing scrabble in the past # ../../../../../sandboxes/gorilla/hiker.feature:3\n   âœ– Given data # ../../../../../sandboxes/gorilla/hiker_steps.js:20\n       | H1 | H2 | H3 | H4 | H5 |\n       | 01 | 02 | 03 | 04 | 05 |\n       | 11 | 12 | 13 | 14 | 15 |\n       | 21 | 22 | 23 | 24 | 25 |\n       Error: rowsHash can only be called on a data table where all rows have exactly two columns\n           at DataTable.rowsHash (/home/cucumber/node_modules/cucumber/lib/models/data_table.js:62:15)\n           at World.<anonymous> (/sandboxes/gorilla/hiker_steps.js:31:27)\n           at Function.<anonymous> (/home/cucumber/node_modules/cucumber/lib/user_code_runner.js:59:25)\n           at Generator.next (<anonymous>)\n           at Generator.tryCatcher (/home/cucumber/node_modules/bluebird/js/release/util.js:16:23)\n           at PromiseSpawn._promiseFulfilled (/home/cucumber/node_modules/bluebird/js/release/generators.js:97:49)\n           at Function.<anonymous> (/home/cucumber/node_modules/bluebird/js/release/generators.js:201:15)\n           at Function.run (/home/cucumber/node_modules/cucumber/lib/user_code_runner.js:120:22)\n           at Object.<anonymous> (/home/cucumber/node_modules/cucumber/lib/runtime/step_runner.js:41:53)\n           at Generator.next (<anonymous>)\n           at Generator.tryCatcher (/home/cucumber/node_modules/bluebird/js/release/util.js:16:23)\n           at PromiseSpawn._promiseFulfilled (/home/cucumber/node_modules/bluebird/js/release/generators.js:97:49)\n           at Async._drainQueue (/home/cucumber/node_modules/bluebird/js/release/async.js:138:12)\n           at Async._drainQueues (/home/cucumber/node_modules/bluebird/js/release/async.js:143:10)\n           at Immediate.Async.drainQueues (/home/cucumber/node_modules/bluebird/js/release/async.js:17:14)\n           at runCallback (timers.js:781:20)\n\n1 scenario (1 failed)\n1 step (1 failed)\n0m00.004s\n","instructions":"Reversi is a board game for two players. The board contains\n8x8 squares. The players place Black or White counters onto\nthe board, one counter per square. More information can be\nfound on Wikipedia en.wikipedia.org/wiki/Reversi?. Your task\nis to write a program that takes a current board position\ntogether with information about whose turn it is, and returns\na list of the legal moves for that player. A move is only\nlegal if it results in at least one of the opponent's\ncounters being flipped.\n\nExample input: (the final B indicates it is Black's turn)\n........\n........\n........\n...BW...\n...WB...\n........\n........\n........\nB\n\nExample output: (each zero indicates a legal move for Black)\n........\n........\n....0...\n...BW0..\n..0WB...\n...0....\n........\n........\nB\n"}