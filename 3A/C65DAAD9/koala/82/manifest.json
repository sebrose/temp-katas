{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    \n    var x1 = Math.abs(this.x - other.x);    \n    var y1 = Math.abs(this.y - other.y);\n    return Math.hypot(x1 , y1);\n\n\n    //return 0\n  }\n};\n","coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('./coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n   it(\"should calculate the distance from another coordinate\", ()=>{\n     var a = new Coordinate(0, 0)\n     var b = new Coordinate(300, 400)\n  \n     assert.equal(a.distanceFrom(b), 500)\n   })\n})\n","hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n  \n  Background:\n    Given Lucy is at 0, 0\n  \n  Scenario Outline: In range shout is heard\n    And Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <what-Lucy-hears>\n    Examples:\n      | Seans-location | what-Lucy-hears |\n      | 0, 900         | Sean            |\n      | 800, 800       | nothing         |\n\n\n  Scenario: Multiple shouters\n    Given people are located at\n    | name  | x   | y    |\n    | Lucy  | 0   | 0    |\n    | Sean  | 500 | 0    |\n    | Oscar | 0   | 1100 |\n    When Sean shouts\n    When Oscar shouts\n    Then Lucy should not hear Oscar\n    But Lucy should hear Sean\n  @tagged\n  Scenario: Shouters should not hear their own shouts\n    When Lucy shouts\n    Then Lucy should not hear Lucy\n  @tagged  \n  Scenario: Multiple shouts from one person\n    And Sean is at 0, 500\n    When Sean shouts\n    And Sean shouts\n    Then Lucy should hear 2 shouts from Sean ","shout_steps.js":"var {defineSupportCode} = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('./shouty')\nvar Coordinate = require('./coordinate')\n\ndefineSupportCode(function({Given, When, Then}) {\n  const ARBITARY_MESSAGE = 'Hello, world'\n\n  When('{word} shouts', function (name) {\n    this.shouty.shout(name, ARBITARY_MESSAGE)\n  })\n\n  Then('{word} should hear {word}', function (listener, shouter) {\n    if (shouter === \"nothing\"){\n      assert.equal(Object.keys(this.shouty.getShoutsHeardBy(listener)).length, 0)\n    } else {\n      assert(shouter in this.shouty.getShoutsHeardBy(listener));\n    }\n  })\n  \n  Then('{word} should hear {int} shouts from {word}', function (listener, NumberOfShouts, shouter) {\n    var number = 0;\n    if (shouter === \"nothing\"){\n      assert.equal(Object.keys(this.shouty.getShoutsHeardBy(listener)).length, 0)\n    } else {\n      number = this.shouty.getShoutsHeardBy(listener)[shouter].length;\n      assert.equal(number, NumberOfShouts);\n    }\n  })\n\n  Then('{word} should not hear {word}', function (listener, shouter) {\n    assert(!(shouter in this.shouty.getShoutsHeardBy(listener)));\n  });\n})\n","shouty_hooks.js":"var {defineSupportCode} = require('cucumber')\n\ndefineSupportCode(function({Before, After}) {\n  \n  Before(function(tags: \"@tagged\"){\n   console.log(\"This is a before hook!\");\n  });\n\n  After(function(){\n   console.log(\"This is a after hook!\");\n  });\n  \n});","parameter_types.js":"// This file is empty\n","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if((distance < MESSAGE_RANGE) && (shouter !== listener)) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n  }\n}\n","world.js":"const { setWorldConstructor } = require('cucumber')\nconst Shouty = require('./shouty')\n\nfunction CustomWorld() {\n  this.shouty = new Shouty();\n}\n\nsetWorldConstructor(CustomWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=./jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\n./cucumber.js \\\n  --require /sandboxes/$CYBER_DOJO_AVATAR_NAME/shout_steps.js \\\n    --require /sandboxes/$CYBER_DOJO_AVATAR_NAME/location_steps.js \\\n  --require /sandboxes/$CYBER_DOJO_AVATAR_NAME/*hooks.js \\\n  --require /sandboxes/$CYBER_DOJO_AVATAR_NAME/*types.js \\\n  --require /sandboxes/$CYBER_DOJO_AVATAR_NAME/world.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  --tags \"@tagged\" \\\n  /sandboxes/$CYBER_DOJO_AVATAR_NAME/*.feature\n","jasmine.json":"{\n    \"spec_dir\": \".\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","output":"Started\n...\n\n\n3 specs, 0 failures\nFinished in 0.007 seconds\n\n/sandboxes/koala/shouty_hooks.js:5\n  Before(function(tags: \"@tagged\"){\n                      ^\n\nSyntaxError: Unexpected token :\n    at createScript (vm.js:74:10)\n    at Object.runInThisContext (vm.js:116:10)\n    at Module._compile (module.js:537:28)\n    at Object.Module._extensions..js (module.js:584:10)\n    at Module.load (module.js:507:32)\n    at tryModuleLoad (module.js:470:12)\n    at Function.Module._load (module.js:462:3)\n    at Module.require (module.js:517:17)\n    at require (internal/module.js:11:18)\n    at /home/cucumber/node_modules/cucumber/lib/cli/index.js:153:16\n    at Array.forEach (<anonymous>)\n    at Cli.getSupportCodeLibrary (/home/cucumber/node_modules/cucumber/lib/cli/index.js:152:24)\n    at Cli.<anonymous> (/home/cucumber/node_modules/cucumber/lib/cli/index.js:171:39)\n    at Generator.next (<anonymous>)\n    at Generator.tryCatcher (/home/cucumber/node_modules/bluebird/js/release/util.js:16:23)\n    at PromiseSpawn._promiseFulfilled (/home/cucumber/node_modules/bluebird/js/release/generators.js:97:49)\n","location_steps.js":"var {defineSupportCode} = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('./shouty')\nvar Coordinate = require('./coordinate')\n\ndefineSupportCode(function({Given, When, Then}) {\n  const ARBITARY_MESSAGE = 'Hello, world'\n\n\n  Given('{word} is at {int}, {int}', function (name, x, y) {\n    this.shouty.setLocation(name, new Coordinate(x, y))\n  })\n  \n  Given('people are located at', function(dataTable){\n    dataTable.hashes().forEach(row => {\n      this.shouty.setLocation(row.name, new Coordinate(row.x, row.y))\n    });\n  });\n})\n"}