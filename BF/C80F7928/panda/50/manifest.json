{"Coordinate.java":"public class Coordinate {\n  private int x;\n  private int y;\n\n  public Coordinate(int xCoord, int yCoord){\n    x = xCoord;\n    y = yCoord;\n  }\n\n  public int distanceFrom(Coordinate other){\n    // TODO: actually calculate distance beteen the coordinates.\n    return (int) Math.hypot(x - other.x, y - other.y);\n    //return 0;\n  }\n}\n","CoordinateTest.java":"import static org.junit.Assert.assertEquals;\nimport org.junit.Test;\n\npublic class CoordinateTest {\n  @Test\n  public void itCalculatesTheDistanceFromItself() {\n      Coordinate a = new Coordinate(0, 0);\n      assertEquals(0, a.distanceFrom(a));\n  }\n\n  @Test\n  public void itCalculatesTheDistanceFromAnotherCoordinateAlongXAxis() {\n      Coordinate a = new Coordinate(0, 0);\n      Coordinate b = new Coordinate(600, 0);\n      assertEquals(600, a.distanceFrom(b));\n  }\n\n  @Test\n  public void itCalculatesTheDistanceFromAnotherCoordinate() {\n      Coordinate a = new Coordinate(0, 0);\n      Coordinate b = new Coordinate(300, 400);\n      assertEquals(500, a.distanceFrom(b));\n  }\n}\n","RunCukesTest.java":"import cucumber.api.junit.Cucumber;\nimport cucumber.api.CucumberOptions;\nimport cucumber.api.SnippetType;\nimport org.junit.runner.RunWith;\n\n@RunWith(Cucumber.class)\n@CucumberOptions(strict=true, monochrome=true, plugin={\"pretty\", \"junit:/tmp/output\"}, snippets=SnippetType.CAMELCASE)\npublic class RunCukesTest {\n    // this is the adapter/bridge code\n    // between cucumber jvm and junit\n    // you do not need to edit this\n}\n","ShoutSteps.java":"import cucumber.api.java.en.Given;\nimport cucumber.api.java.en.Then;\nimport cucumber.api.java.en.When;\nimport java.util.*;\n\nimport static java.util.Collections.emptyMap;\nimport static org.junit.Assert.*;\n\n\n\npublic class ShoutSteps {\n    private static final String ARBITRARY_MESSAGE = \"Hello, world\";\n    private final Shouty shouty = new Shouty();\n\n    @Given(\"{word} is at {int}, {int}\")\n    public void lucy_is_at(String name, int xCoord, int yCoord) {\n        shouty.setLocation(name, new Coordinate(xCoord, yCoord));\n    }\n    \n    @Given(\"people are located at\")\n    public void peopleAreLocatedAt(List<PersonLocation> locations) {\n        for (PersonLocation location : locations) {\n            shouty.setLocation(location.getName(), new Coordinate(location.getX(), location.getY()));\n        }   \n    }\n\n    @When(\"{word} shouts\")\n    public void sean_shouts(String name) {\n        shouty.shout(name, ARBITRARY_MESSAGE);\n    }\n\n    @Then(\"{word} should hear {word}\")\n    public void receiver_should_hear_sender(String receiver, String sender) {\n        if (sender.equals(\"nothing\")) {\n            assertEquals(emptyMap(), shouty.getShoutsHeardBy(receiver));\n        } else {\n            assertTrue(shouty.getShoutsHeardBy(receiver).containsKey(sender));\n        }\n    }\n    \n    @Then(\"{word} should not hear {word}\")\n    public void receiver_should_not_hear_sender(String receiver, String sender) {\n        assertFalse(shouty.getShoutsHeardBy(receiver).containsKey(sender));\n    }\n}\n\nclass PersonLocation {\n    private String name;\n    private int x;\n    private int y;\n    \n    public PersonLocation(String name, int x, int y) {\n        this.name = name;\n        this.x = x;\n        this.y = y;\n    }\n    \n    public String getName() {\n        return name;\n    }\n    \n    public int getX() {\n        return x;\n    }\n    \n    public int getY() {\n        return y;\n    }\n}\n","Shouty.java":"import java.util.*;\n\npublic class Shouty {\n  private static final int MESSAGE_RANGE = 1000;\n  private Map<String, Coordinate> locations = new HashMap<String, Coordinate>();\n  private Map<String, List<String> > shouts = new HashMap<String, List<String> >();\n\n  public void setLocation(String person, Coordinate location) {\n      locations.put(person, location);\n  }\n\n  public void shout(String shouter, String shout) {\n      if (!shouts.containsKey(shouter)) {\n          List<String> personsShouts = new ArrayList<String>();\n          shouts.put(shouter, personsShouts);\n      }\n\n      shouts.get(shouter).add(shout);\n  }\n\n  public Map<String, List<String> > getShoutsHeardBy(String listener) {\n      HashMap<String, List<String> > shoutsHeard = new HashMap<String, List<String> >();\n\n      for (Map.Entry<String, List<String> > entry : shouts.entrySet()) {\n          String shouter = entry.getKey();\n          if (shouter.equals(listener)) {\n              continue;\n          }\n          List<String> personsShouts = entry.getValue();\n          int distance = locations.get(listener).distanceFrom(locations.get(shouter));\n          if (distance < MESSAGE_RANGE)\n              shoutsHeard.put(shouter, personsShouts);\n      }\n\n      return shoutsHeard;\n  }\n}\n","ShoutyTypes.java":"import cucumber.api.TypeRegistry;\nimport io.cucumber.cucumberexpressions.CaptureGroupTransformer;\nimport io.cucumber.cucumberexpressions.ParameterType;\nimport io.cucumber.datatable.DataTableType;\nimport io.cucumber.datatable.TableEntryTransformer;\n\nimport java.util.Locale;\n\nimport static java.lang.Integer.parseInt;\n\npublic class ShoutyTypes implements cucumber.api.TypeRegistryConfigurer {\n    @Override\n    public Locale locale() {\n        return Locale.ENGLISH;\n    }\n\n    @Override\n    public void configureTypeRegistry(TypeRegistry typeRegistry) {\n        typeRegistry.defineDataTableType(new DataTableType(PersonLocation.class,\n              (TableEntryTransformer<PersonLocation>) row -> {\n                  String name = row.get(0);\n                  int x = Integer.valueOf(row.get(1));\n                  int y = Integer.valueOf(row.get(2));\n                  return new PersonLocation(name, x, y);\n              }));\n    }\n\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /cucumber/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi\n","cucumber.xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\">\n\n    <bean class=\"Shouty\" autowire-candidate=\"true\" />\n\n    <context:annotation-config/>\n\n</beans>\n","hear_shout.feature":"Feature: Hearing a shout\n\n    Shouts have a range of approximately 1000 metres\n\n    Scenario: Multiple Shouters\n        Given people are located at\n            | Lucy | 0   | 0   |\n            | Sean | 0   | 500 |\n            | Oscar| 1100| 0   |\n        When Sean shouts\n        And Oscar shouts\n        Then Lucy should not hear Oscar\n        But Lucy should hear Sean\n        \n    Scenario: Shouters should not hear their own shouts\n        When Sean shouts\n        Then Sean should hear nothing\n        \n    Scenario Outline: only hear in-range shouts\n        Given Lucy is at 0, 0\n        And Sean is at <shouter-location>\n        When Sean shouts\n        Then Lucy should hear <shouter>\n        \n        Examples: some simple examples\n            | shouter-location | shouter |\n            | 0, 900           | Sean    |\n            | 800, 800         | nothing |","output":"JUnit version 4.12\n...Feature: Hearing a shout\n    Shouts have a range of approximately 1000 metres\n\n  Scenario: Multiple Shouters       # hear_shout.feature:5\n.    Given people are located at     # ShoutSteps.peopleAreLocatedAt(List<PersonLocation>)\n      cucumber.runtime.CucumberException: Could not convert arguments for step [people are located at] defined at 'ShoutSteps.peopleAreLocatedAt(List<PersonLocation>) in file:/sandboxes/panda/'.\nThe details are in the stacktrace below.\n\tat cucumber.runtime.PickleStepDefinitionMatch.couldNotConvertArguments(PickleStepDefinitionMatch.java:69)\n\tat cucumber.runtime.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:46)\n\tat cucumber.runner.TestStep.executeStep(TestStep.java:55)\n\tat cucumber.runner.TestStep.run(TestStep.java:42)\n\tat cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:53)\n\tat cucumber.runner.TestCase.run(TestCase.java:47)\n\tat cucumber.runner.Runner.runPickle(Runner.java:44)\n\tat cucumber.runtime.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:140)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:68)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:23)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:73)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:99)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:56)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat cucumber.api.junit.Cucumber$1.evaluate(Cucumber.java:108)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:36)\nCaused by: io.cucumber.datatable.CucumberDataTableException: 'java.util.List<PersonLocation>' could not transform\n      | Lucy  | 0    | 0   |\n      | Sean  | 0    | 500 |\n      | Oscar | 1100 | 0   |\n\n\tat io.cucumber.datatable.DataTableType.transform(DataTableType.java:86)\n\tat io.cucumber.datatable.DataTableTypeRegistryTableConverter.convert(DataTableTypeRegistryTableConverter.java:53)\n\tat io.cucumber.datatable.DataTable.convert(DataTable.java:364)\n\tat io.cucumber.stepexpression.StepExpressionFactory$3.transform(StepExpressionFactory.java:72)\n\tat io.cucumber.stepexpression.DataTableArgument.getValue(DataTableArgument.java:19)\n\tat cucumber.runtime.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:39)\n\t... 36 more\nCaused by: io.cucumber.datatable.CucumberDataTableException: Can't convert DataTable to Map<java.lang.String, java.lang.String>. Encountered duplicate key 0 with values 0 and 500\n\tat io.cucumber.datatable.CucumberDataTableException.cantConvertToMap(CucumberDataTableException.java:25)\n\tat io.cucumber.datatable.CucumberDataTableException.duplicateKeyException(CucumberDataTableException.java:30)\n\tat io.cucumber.datatable.DataTable.asMaps(DataTable.java:256)\n\tat io.cucumber.datatable.DataTableType$TableEntryTransformerAdaptor.transform(DataTableType.java:196)\n\tat io.cucumber.datatable.DataTableType$TableEntryTransformerAdaptor.transform(DataTableType.java:179)\n\tat io.cucumber.datatable.DataTableType.transform(DataTableType.java:83)\n\t... 41 more\n\n    When Sean shouts                # ShoutSteps.sean_shouts(String)\n    And Oscar shouts                # ShoutSteps.sean_shouts(String)\n    Then Lucy should not hear Oscar # ShoutSteps.receiver_should_not_hear_sender(String,String)\n    But Lucy should hear Sean       # ShoutSteps.receiver_should_hear_sender(String,String)\nE\n  Scenario: Shouters should not hear their own shouts # hear_shout.feature:15\n.    When Sean shouts                                  # ShoutSteps.sean_shouts(String)\n    Then Sean should hear nothing                     # ShoutSteps.receiver_should_hear_sender(String,String)\n\n  Scenario Outline: only hear in-range shouts # hear_shout.feature:19\n    Given Lucy is at 0, 0\n    And Sean is at <shouter-location>\n    When Sean shouts\n    Then Lucy should hear <shouter>\n\n    Examples: some simple examples\n\n  Scenario Outline: only hear in-range shouts # hear_shout.feature:27\n.    Given Lucy is at 0, 0                     # ShoutSteps.lucy_is_at(String,int,int)\n    And Sean is at 0, 900                     # ShoutSteps.lucy_is_at(String,int,int)\n    When Sean shouts                          # ShoutSteps.sean_shouts(String)\n    Then Lucy should hear Sean                # ShoutSteps.receiver_should_hear_sender(String,String)\n\n  Scenario Outline: only hear in-range shouts # hear_shout.feature:28\n.    Given Lucy is at 0, 0                     # ShoutSteps.lucy_is_at(String,int,int)\n    And Sean is at 800, 800                   # ShoutSteps.lucy_is_at(String,int,int)\n    When Sean shouts                          # ShoutSteps.sean_shouts(String)\n    Then Lucy should hear nothing             # ShoutSteps.receiver_should_hear_sender(String,String)\n\nFailed scenarios:\nhear_shout.feature:5 # Multiple Shouters\n\n4 Scenarios (1 failed, 3 passed)\n15 Steps (1 failed, 4 skipped, 10 passed)\n0m0.921s\n\ncucumber.runtime.CucumberException: Could not convert arguments for step [people are located at] defined at 'ShoutSteps.peopleAreLocatedAt(List<PersonLocation>) in file:/sandboxes/panda/'.\nThe details are in the stacktrace below.\n\tat cucumber.runtime.PickleStepDefinitionMatch.couldNotConvertArguments(PickleStepDefinitionMatch.java:69)\n\tat cucumber.runtime.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:46)\n\tat cucumber.runner.TestStep.executeStep(TestStep.java:55)\n\tat cucumber.runner.TestStep.run(TestStep.java:42)\n\tat cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:53)\n\tat cucumber.runner.TestCase.run(TestCase.java:47)\n\tat cucumber.runner.Runner.runPickle(Runner.java:44)\n\tat cucumber.runtime.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:140)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:68)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:23)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:73)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:99)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:56)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat cucumber.api.junit.Cucumber$1.evaluate(Cucumber.java:108)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:36)\nCaused by: io.cucumber.datatable.CucumberDataTableException: 'java.util.List<PersonLocation>' could not transform\n      | Lucy  | 0    | 0   |\n      | Sean  | 0    | 500 |\n      | Oscar | 1100 | 0   |\n\n\tat io.cucumber.datatable.DataTableType.transform(DataTableType.java:86)\n\tat io.cucumber.datatable.DataTableTypeRegistryTableConverter.convert(DataTableTypeRegistryTableConverter.java:53)\n\tat io.cucumber.datatable.DataTable.convert(DataTable.java:364)\n\tat io.cucumber.stepexpression.StepExpressionFactory$3.transform(StepExpressionFactory.java:72)\n\tat io.cucumber.stepexpression.DataTableArgument.getValue(DataTableArgument.java:19)\n\tat cucumber.runtime.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:39)\n\t... 36 more\nCaused by: io.cucumber.datatable.CucumberDataTableException: Can't convert DataTable to Map<java.lang.String, java.lang.String>. Encountered duplicate key 0 with values 0 and 500\n\tat io.cucumber.datatable.CucumberDataTableException.cantConvertToMap(CucumberDataTableException.java:25)\n\tat io.cucumber.datatable.CucumberDataTableException.duplicateKeyException(CucumberDataTableException.java:30)\n\tat io.cucumber.datatable.DataTable.asMaps(DataTable.java:256)\n\tat io.cucumber.da\noutput truncated by cyber-dojoJun 05, 2018 7:23:10 PM org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\nINFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@64c87930: startup date [Tue Jun 05 19:23:10 GMT 2018]; root of context hierarchy\nJun 05, 2018 7:23:10 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\nINFO: Loading XML bean definitions from class path resource [cucumber.xml]\n"}