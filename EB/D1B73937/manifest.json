{"id":"EBD1B73937","created":[2018,3,7,14,40,2],"runner_choice":"stateless","image_name":"cyberdojofoundation/java_junit","display_name":"Java, JUnit","filename_extension":".java","progress_regexs":["Tests run\\: (\\d)+,(\\s)+Failures\\: (\\d)+","OK \\((\\d)+ test(s)?\\)"],"highlight_filenames":[],"lowlight_filenames":["cyber-dojo.sh","makefile","Makefile","unity.license.txt"],"language":"Java-JUnit","tab_size":4,"visible_files":{"HikerTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class HikerTest {\n\n    @Test\n    public void life_the_universe_and_everything() {\n        int expected = 42;\n        int actual = Hiker.answer();\n        assertEquals(expected, actual);\n    }\n}\n","Hiker.java":"\npublic class Hiker {\n\n    public static int answer() {\n        return 6 * 9;\n    }\n}\n","cyber-dojo.sh":"\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore \\\n    `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` \\\n    | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"","instructions":"To try and encourage more sales of the 5 different Harry\nPotter books they sell, a bookshop has decided to offer \ndiscounts of multiple-book purchases. \n\nOne copy of any of the five books costs 8 EUR. \n\nIf, however, you buy two different books, you get a 5% \ndiscount on those two books.\n\nIf you buy 3 different books, you get a 10% discount. \n\nIf you buy 4 different books, you get a 20% discount.\n\nIf you go the whole hog, and buy all 5, you get a huge 25%\ndiscount. \n\nNote that if you buy, say, four books, of which 3 are \ndifferent titles, you get a 10% discount on the 3 that \nform part of a set, but the fourth book still costs 8 EUR. \n\nYour mission is to write a piece of code to calculate the \nprice of any conceivable shopping basket (containing only \nHarry Potter books), giving as big a discount as possible.\n\nFor example, how much does this basket of books cost?\n\n2 copies of the first book\n2 copies of the second book\n2 copies of the third book\n1 copy of the fourth book\n1 copy of the fifth book\n\nOne way of group these 8 books is:\n 1 group of 5 --> 25% discount (1st,2nd,3rd,4th,5th)\n+1 group of 3 --> 10% discount (1st,2nd,3rd)\nThis would give a total of\n 5 books at a 25% discount\n+3 books at a 10% discount\nGiving\n 5 x (8 - 2.00) == 5 x 6.00 == 30.00\n+3 x (8 - 0.80) == 3 x 7.20 == 21.60\nFor a total of 51.60\n\nHowever, a different way to group these 8 books is:\n 1 group of 4 books --> 20% discount  (1st,2nd,3rd,4th)\n+1 group of 4 books --> 20% discount  (1st,2nd,3rd,5th)\nThis would give a total of\n 4 books at a 20% discount\n+4 books at a 20% discount\nGiving\n 4 x (8-1.60) == 4 x 6.40 == 25.60\n+4 x (8-1.60) == 4 x 6.40 == 25.60\nFor a total of 51.20\n\nAnd 51.20 is the price with the biggest discount.\n"},"exercise":"Harry_Potter"}