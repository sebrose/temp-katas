{"cyber-dojo.sh":"rspec . --format progress\n\n# Test output can be formatted as progress or documentation\ncucumber -f progress -r features/steps\n","coordinate_spec.rb":"require_relative 'coordinate'\n\ndescribe Coordinate do\n  it \"calculates the distance from itself\" do\n    a = Coordinate.new(0, 0)\n    expect(a.distance_from(a)).to eq(0)\n  end\n\n  it \"calculates the distance from another coordinate along x axis\" do\n    a = Coordinate.new(0, 0)\n    b = Coordinate.new(600, 0)\n    expect(a.distance_from(b)).to eq(600)\n  end\n\n  # it \"calculates the distance from another coordinate\" do\n  #   a = Coordinate.new(0, 0)\n  #   b = Coordinate.new(300, 400)\n  #   expect(a.distance_from(b)).to eq(500)\n  # end\nend\n","coordinate.rb":"class Coordinate\n  attr_reader :x, :y\n\n  def initialize(x, y)\n    @x = x\n    @y = y\n  end\n\n  def distance_from(other)\n    # TODO: actually calculate distance between the coordinates.\n    #       e.g. (@x - other.x).abs\n    0\n  end\nend\n","output":".F\n\nFailures:\n\n  1) Coordinate calculates the distance from another coordinate along x axis\n     Failure/Error: expect(a.distance_from(b)).to eq(600)\n\n       expected: 600\n            got: 0\n\n       (compared using ==)\n     # ./coordinate_spec.rb:12:in `block (2 levels) in <top (required)>'\n\nFinished in 0.01673 seconds (files took 0.12917 seconds to load)\n2 examples, 1 failure\n\nFailed examples:\n\nrspec ./coordinate_spec.rb:9 # Coordinate calculates the distance from another coordinate along x axis\n\ncannot load such file -- /sandboxes/walrus/features/shouty (LoadError)\n/sandboxes/walrus/features/steps/steps.rb:1:in `require_relative'\n/sandboxes/walrus/features/steps/steps.rb:1:in `<top (required)>'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/glue/registry_and_more.rb:106:in `load'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/glue/registry_and_more.rb:106:in `load_code_file'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/runtime/support_code.rb:147:in `load_file'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/runtime/support_code.rb:88:in `block in load_files!'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/runtime/support_code.rb:87:in `each'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/runtime/support_code.rb:87:in `load_files!'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/runtime.rb:270:in `load_step_definitions'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/runtime.rb:67:in `run!'\n/usr/local/bundle/gems/cucumber-3.1.0/lib/cucumber/cli/main.rb:33:in `execute!'\n/usr/local/bundle/gems/cucumber-3.1.0/bin/cucumber:9:in `<top (required)>'\n/usr/local/bundle/bin/cucumber:23:in `load'\n/usr/local/bundle/bin/cucumber:23:in `<main>'\n","lib/shouty.rb":"require_relative 'coordinate'\n\nclass Shouty\n    MESSAGE_RANGE = 1000\n\n    def initialize\n      @locations = {}\n      @shouts = {}\n    end\n\n    def set_location(person, location)\n      @locations[person] = location\n    end\n\n    def shout(person, shout)\n      @shouts[person] ||= [ ]\n      @shouts[person].push(shout)\n    end\n\n    def shouts_heard_by(listener)\n      shoutsHeard = {}\n\n      @shouts.each do |shouter, personsShouts|\n        distance = @locations[listener].distance_from(@locations[shouter])\n        if distance < MESSAGE_RANGE\n          shoutsHeard[shouter] = personsShouts\n        end\n      end\n\n      shoutsHeard\n    end\nend\n","features/steps/foo_steps.rb":"Before do\n  puts \"yikes\"\nend","features/steps/steps.rb":"require_relative '../shouty'\n\nARBITRARY_MESSAGE = \"Hello, world\"\n\nBefore do\n  @shouty = Shouty.new\nend\n\nGiven('Lucy is at {int}, {int}') do |x, y|\n  @shouty.set_location(\"Lucy\", Coordinate.new(x, y))\nend\n\nGiven('Sean is at {int}, {int}') do |x, y|\n  @shouty.set_location(\"Sean\", Coordinate.new(x, y))\nend\n\nWhen('Sean shouts') do\n  @shouty.shout(\"Sean\", ARBITRARY_MESSAGE)\nend\n\nThen('Lucy should hear Sean') do\n  expect(@shouty.shouts_heard_by(\"Lucy\").size).to eq(1)\nend\n\nThen('Lucy should hear nothing') do\n  expect(@shouty.shouts_heard_by(\"Lucy\").size).to eq(0)\nend\n","features/hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\n  Scenario: In range shout is heard\n    Given Lucy is at 0, 0\n    And Sean is at 0, 900\n    When Sean shouts\n    Then Lucy should hear Sean\n\n  Scenario: Out of range shout is not heard\n    Given Lucy is at 0, 0\n    And Sean is at 800, 800\n    When Sean shouts\n    Then Lucy should hear nothing\n"}