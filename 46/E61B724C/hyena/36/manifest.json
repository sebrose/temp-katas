{"output":"JASMINE TESTS\n=============\nStarted\n..\n\n\n2 specs, 0 failures\nFinished in 0.007 seconds\n\nCUCUMBER FEATURES\n=================\nError: Undefined parameter type {shouter}\n    at UndefinedParameterTypeError.CucumberExpressionError (/home/cucumber/node_modules/cucumber-expressions/dist/src/errors.js:17:131)\n    at new UndefinedParameterTypeError (/home/cucumber/node_modules/cucumber-expressions/dist/src/errors.js:67:139)\n    at new CucumberExpression (/home/cucumber/node_modules/cucumber-expressions/dist/src/cucumber_expression.js:45:33)\n    at StepDefinition.getCucumberExpression (/home/cucumber/node_modules/cucumber/lib/models/step_definition.js:77:16)\n    at StepDefinition.matchesStepName (/home/cucumber/node_modules/cucumber/lib/models/step_definition.js:93:37)\n    at /home/cucumber/node_modules/cucumber/lib/runtime/test_case_runner.js:150:31\n    at Array.filter (<anonymous>)\n    at TestCaseRunner.getStepDefinitions (/home/cucumber/node_modules/cucumber/lib/runtime/test_case_runner.js:149:54)\n    at /home/cucumber/node_modules/cucumber/lib/runtime/test_case_runner.js:107:38\n    at Array.forEach (<anonymous>)\n    at TestCaseRunner.emitPrepared (/home/cucumber/node_modules/cucumber/lib/runtime/test_case_runner.js:106:34)\n    at TestCaseRunner.<anonymous> (/home/cucumber/node_modules/cucumber/lib/runtime/test_case_runner.js:213:14)\n    at Generator.next (<anonymous>)\n    at Generator.tryCatcher (/home/cucumber/node_modules/bluebird/js/release/util.js:16:23)\n    at PromiseSpawn._promiseFulfilled (/home/cucumber/node_modules/bluebird/js/release/generators.js:97:49)\n    at TestCaseRunner.<anonymous> (/home/cucumber/node_modules/bluebird/js/release/generators.js:201:15)\n","coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    // return other.x - this.x\n    return Math.sqrt(Math.pow((other.x - this.x),2) + Math.pow((other.y-this.y),2))\n  }\n};\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('../coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n  // it(\"should calculate the distance from another coordinate\", ()=>{\n  //   var a = new Coordinate(0, 0)\n  //   var b = new Coordinate(300, 400)\n  //\n  //   assert.equal(a.distanceFrom(b), 500)\n  // })\n})\n","features/hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\n  Scenario Outline: only her in-range shouts\n    Given Lucy is at 0, 0\n    And Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <what-Lucy-hears>\n    \n    Examples: some simple examples\n      | Seans-location  | what-Lucy-hears |\n      | 0, 900          | Sean            |\n      | 800, 800        | nothing         |\n    \n  Scenario: Multiple shouters\n    Given Lucy is at 0, 0\n    And Sean is at 0, 500\n    And Oscar is at 1100, 0\n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should not hear Oscar\n    And Lucy should hear Sean\n    \n  Scenario: Shouting at myself\n    When Sean shouts\n    Then Sean should hear nothing\n","features/shout_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('../shouty')\nvar Coordinate = require('../coordinate')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\nlet shouty\n\nBefore(function() {\n  shouty = new Shouty()\n})\n\nGiven('{word} is at {int}, {int}', function (person,x, y) {\n  shouty.setLocation(person, new Coordinate(x, y))\n})\n\nWhen('{shouter} shouts', function (shouter) {\n  shouty.shout(shouter, ARBITARY_MESSAGE)\n})\n\nThen('{listener} should hear {shouter}', function (listener, shouter) {\n  assert.equal(Object.keys(shouty.getShoutsHeardBy(listener)).length, 1)\n})\n\nThen('{listener} should hear nothing', function (listener) {\n  assert.equal(Object.keys(shouty.getShoutsHeardBy(listener)).length, 0)\n})\n\nThen('{listener} should not hear {shouter}', function (listener, shouter) {\n  assert.equal(Object.keys(shouty.shoutIsHeardBy(shouter,listener)), false)\n})\n\n\n","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n\n    if (this.locations[listener] == undefined) {\n      return 0;\n    }\n    \n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n  }\n\n  \n  this.shoutIsHeardBy = function(shouter, listener) {\n\n    var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n    if (distance < MESSAGE_RANGE) {\n      return true;\n    } else {\n      return false;\n    }\n      \n  }\n  \n}\n","features/world.js":"const { setWorldConstructor } = require('cucumber')\n\nfunction CustomWorld() {\n}\n\nsetWorldConstructor(CustomWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\necho JASMINE TESTS\necho =============\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\necho CUCUMBER FEATURES\necho =================\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  ${CYBER_DOJO_SANDBOX}/features/*.feature\n","tests/jasmine.json":"{\n    \"spec_dir\": \"tests\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n"}