{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    // TODO: actually calculate distance beteen the coordinates.\n    //       e.g. return Math.abs(this.x - other.x)\n\n    return Math.sqrt(Math.pow(this.x-other.x, 2) + Math.pow(this.y-other.y, 2));\n  }\n};\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('../coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n   it(\"should calculate the distance from another coordinate\", ()=>{\n     var a = new Coordinate(0, 0)\n     var b = new Coordinate(300, 400)\n  \n     assert.equal(a.distanceFrom(b), 500)\n   })\n})\n","features/hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\nBackground: \n   Given Lucy is at 0, 0\n  \n  @FirstSc\n  Scenario: Multiple shouts from one person    \n    And Sean is at 0, 800    \n    When Sean shouts\n    And Sean shouts\n    Then Lucy should hear 2 shouts from Sean\n    \n  Scenario: Out of range shout is not heard\n    And Sean is at 800, 800    \n    When Sean shouts\n    Then Lucy should hear nothing\n\n  Scenario Outline: Multiple shouters\n    Given people are located\n     | name | x    | y   |\n     | Lucy | 0    | 0   |\n     | Sean | 0    | 500 | \n     | Oscar| 1100 | 0   |    \n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should not hear Oscar\n    But Lucy should hear Sean\n    \n    Examples: some simple examples\n     \n  @@FirstSc\n  Scenario Outline: In range shout is heard\n    And Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <what-Lucy-hears>\n    And Sean should not hear the shout\n    \n  Examples: some simple examples\n     | Seans-location | what-Lucy-hears |\n     | 0, 900         | Sean            |\n     | 800, 800       | nothing         |","features/shout_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Coordinate = require('../coordinate')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\n\n\n\nWhen('{word} shouts', function (listener) {\n  this.shouty.shout(listener, ARBITARY_MESSAGE)\n})\nWhen('{word} does not shout', function (listener) {\n    return listener + 'is not shouting';\n         });\n\nThen('{word} should hear Sean', function (listener) {\n  assert.equal(Object.keys(this.shouty.getShoutsHeardBy(listener)).length, 1)\n})\nThen('{word} should not hear {word}', function (listener, speaker) {\n // shouty.getShoutsHeardBy(name).filter( (x) => x == speaker )\n  assert.equal(this.shouty.getShoutsHeardBy(listener)[speaker],undefined)\n})\nThen('{word} should hear nothing', function (listener) {\n  assert.equal(Object.keys(this.shouty.getShoutsHeardBy(listener)).length, 0)\n})\nThen('{word} should not hear the shout', function (name) {\n  assert.equal(this.shouty.getShoutsHeardBy(name)[name],undefined)\n})\nThen('{word} should hear 2 shouts from {word}', function (listener, speaker) {\n  assert.equal(this.shouty.getShoutsHeardBy(listener)[speaker].length, 2)\n})\n","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n    \n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n    \n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE && shouter != listener) {\n          shoutsHeard[shouter] = personsShouts\n        }\n      \n    })\n\n    return shoutsHeard\n  }\n  \n  this.getListenersforTheShout = function(speaker, listener) {\n    var listeners = {}\n    \n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE && shouter != speaker) {\n          listeners[shouter] = personsShouts\n        }\n      \n    })\n\n    return listeners\n  }\n \n}\n","features/world.js":"const { setWorldConstructor } = require('cucumber')\nconst Shouty = require('../shouty')\n\nfunction CustomWorld() {\n  this.shouty = new Shouty()\n}\n\nsetWorldConstructor(CustomWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\necho JASMINE TESTS\necho =============\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\necho CUCUMBER FEATURES\necho =================\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  ${CYBER_DOJO_SANDBOX}/features/*.feature\n","tests/jasmine.json":"{\n    \"spec_dir\": \"tests\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","output":"JASMINE TESTS\n=============\nStarted\n...\n\n\n3 specs, 0 failures\nFinished in 0.006 seconds\n\nCUCUMBER FEATURES\n=================\nReferenceError: After is not defined\n    at Object.<anonymous> (/sandboxes/ray/features/shouty_hooks.js:8:1)\n    at Module._compile (module.js:573:30)\n    at Object.Module._extensions..js (module.js:584:10)\n    at Module.load (module.js:507:32)\n    at tryModuleLoad (module.js:470:12)\n    at Function.Module._load (module.js:462:3)\n    at Module.require (module.js:517:17)\n    at require (internal/module.js:11:18)\n    at /home/cucumber/node_modules/cucumber/lib/cli/index.js:153:16\n    at Array.forEach (<anonymous>)\n    at Cli.getSupportCodeLibrary (/home/cucumber/node_modules/cucumber/lib/cli/index.js:152:24)\n    at Cli.<anonymous> (/home/cucumber/node_modules/cucumber/lib/cli/index.js:171:39)\n    at Generator.next (<anonymous>)\n    at Generator.tryCatcher (/home/cucumber/node_modules/bluebird/js/release/util.js:16:23)\n    at PromiseSpawn._promiseFulfilled (/home/cucumber/node_modules/bluebird/js/release/generators.js:97:49)\n    at Promise._settlePromise (/home/cucumber/node_modules/bluebird/js/release/promise.js:574:26)\n","features/location_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Coordinate = require('../coordinate')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\nlet shouty\n\nGiven('{word} is at {int}, {int}', function (listener, x, y) {\n  this.shouty.setLocation(listener, new Coordinate(x, y))\n})\n\nGiven('people are located at', function () {\n  table.hashes().forEach(row => {this.shouty.setLocation(row.name, new Coordinate(row.x, row.y))})\n})\n\n","features/shouty_hooks.js":"var { Before } = require('cucumber')\n\nBefore({tags: \"@FirstSc\"}, function()\n{\nconsole.log(\"I am here!\")\n})\n\nAfter({tags: \"@LastSc\"}, function()\n{\nconsole.log(\"I am here!\")\n})"}