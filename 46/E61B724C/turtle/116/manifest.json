{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    // TODO: actually calculate distance beteen the coordinates.\n    \n    var result = Math.sqrt(Math.pow(this.x - other.x, 2) + Math.pow(this.y - other.y, 2))\n    \n    return result\n  }\n};\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('../coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n  // it(\"should calculate the distance from another coordinate\", ()=>{\n  //   var a = new Coordinate(0, 0)\n  //   var b = new Coordinate(300, 400)\n  //\n  //   assert.equal(a.distanceFrom(b), 500)\n  // })\n})\n","features/hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n   \n   Background:\n    Given Lucy is at 0, 0\n\n \n   Scenario: Multiple shouters\n    Given people are located at\n      | name  | x    | y   |\n      | Sean  | 0    | 500 |\n      | Oscar | 1100 | 0   | \n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should not hear Oscar\n    But Lucy should hear Sean\n    \n   Scenario: Shouter sould not hear their own shouts\n    When Lucy shouts\n    Then Lucy should not hear Lucy\n\n   Scenario Outline: only hear in-range shouts\n    Given Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <what-Lucy-hears>\n    Examples: some simple examples \n      | Seans-location | what-Lucy-hears | \n      | 0, 900         | Sean            | \n      | 800, 800       | from nobody     | \n      \n   Scenario: Multiple shouts from one person\n    Given Sean is at 0, 500\n    When Sean shouts\n    And Sean shouts\n    Then Lucy should hear 2 shouts from Sean","features/shout_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('../shouty')\nvar Coordinate = require('../coordinate')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\nlet shouty\n\nBefore(function() {\n\n})\n\n\n\n//Given('Sean is at {int}, {int}', function (x, y) {\n  //shouty.setLocation('Sean', new Coordinate(x, y))\n//})\n\nWhen('{word} shouts', function (shouter) {\n  this.shouty.shout(shouter, ARBITARY_MESSAGE)\n})\n\nThen('{word} should hear {word}', function (person, shouter) {\n  //assert.equal(Object.keys(shouty.getShoutsHeardByPeople(person, shouter)).length, 1)\n   assert.equal(this.shouty.getShoutsHeardBy(person)[shouter].length > 0,true)\n})\n\nThen('{word} should hear from nobody', function (person) {\n  assert.equal(Object.keys(this.shouty.getShoutsHeardBy(person)).length, 0)\n })\n\nThen('{word} should not hear {word}', function (person, shouter) {\n  //console.log(shouty.getShoutsHeardBy(person)[shouter])\n  assert.equal(this.shouty.getShoutsHeardBy(person)[shouter],undefined)\n})\n\nThen('{word} should hear {int} shouts from {word}', function (person, int, shouter) {\n  // Write code here that turns the phrase above into concrete actions\n  assert.equal(Object.keys(this.shouty.getShoutsHeardBy(person)[shouter]).length, int)\n});","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n        //console.log('personShouts is ' + personsShouts)\n        if(distance < MESSAGE_RANGE && listener !== shouter) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n    \n  }   \n}\n","features/world.js":"const { setWorldConstructor } = require('cucumber')\nconst Shouty = require('../shouty')\n\nfunction CustomWorld() {\n  this.shouty = new Shouty()\n}\n\nsetWorldConstructor(CustomWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\necho JASMINE TESTS\necho =============\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\necho CUCUMBER FEATURES\necho =================\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  ${CYBER_DOJO_SANDBOX}/features/*.feature\n","tests/jasmine.json":"{\n    \"spec_dir\": \"tests\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","output":"JASMINE TESTS\n=============\nStarted\n..\n\n\n2 specs, 0 failures\nFinished in 0.007 seconds\n\nCUCUMBER FEATURES\n=================\nlocation step before hook\n..shouty hooks before hook\n..{ name: 'Sean', x: '0', y: '500' }\n{ name: 'Oscar', x: '1100', y: '0' }\n.....shouty hooks after hook\n.location step before hook\n..shouty hooks before hook\n....shouty hooks after hook\n.location step before hook\n..shouty hooks before hook\n.....shouty hooks after hook\n.location step before hook\n..shouty hooks before hook\n.....shouty hooks after hook\n.location step before hook\n..shouty hooks before hook\n......shouty hooks after hook\n.location step before hook\n..shouty hooks before hook\n.....Fshouty hooks after hook\n.\n\nFailures:\n\n1) Scenario: Shouters move location # ../../../../../sandboxes/turtle/features/move_location.feature:6\n   ✔ Before # ../../../../../sandboxes/turtle/features/location_steps.js:9\n   ✔ Before # ../../../../../sandboxes/turtle/features/shout_steps.js:9\n   ✔ Before # ../../../../../sandboxes/turtle/features/shouty_hooks.js:3\n   ✔ Given Sean is at 0, 1100 # ../../../../../sandboxes/turtle/features/location_steps.js:13\n   ✔ And Sean shouts # ../../../../../sandboxes/turtle/features/shout_steps.js:19\n   ✔ When Sean moves to 0, 900 # ../../../../../sandboxes/turtle/features/move_location_steps.js:16\n   ✔ And Sean shouts # ../../../../../sandboxes/turtle/features/shout_steps.js:19\n   ✖ Then Lucy should hear Sean # ../../../../../sandboxes/turtle/features/shout_steps.js:23\n       TypeError: Cannot read property 'distanceFrom' of undefined\n           at Object.keys.forEach.shouter (/sandboxes/turtle/shouty.js:22:48)\n           at Array.forEach (<anonymous>)\n           at Shouty.getShoutsHeardBy (/sandboxes/turtle/shouty.js:20:30)\n           at CustomWorld.<anonymous> (/sandboxes/turtle/features/shout_steps.js:25:29)\n   ✔ After # ../../../../../sandboxes/turtle/features/shouty_hooks.js:7\n\n6 scenarios (1 failed, 5 passed)\n27 steps (1 failed, 26 passed)\n0m00.017s\n","features/location_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('../shouty')\nvar Coordinate = require('../coordinate')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\nlet shouty\n\nBefore(function() {\n  console.log('location step before hook')\n})\n\nGiven('{word} is at {int}, {int}', function (person,x, y) {\n  this.shouty.setLocation(person, new Coordinate(x, y))\n})\n\nGiven('people are located at', function (dataTable) {\n  dataTable.hashes().forEach(row => {\n    this.shouty.setLocation(row.name, new Coordinate(row.x, row.y))\n    console.log(row)\n  })\n  // Write code here that turns the phrase above into concrete actions\n  //return 'pending';\n});","features/shouty_hooks.js":"var {Before, After} = require('cucumber')\n\nBefore(function() {\n  console.log('shouty hooks before hook')\n})\n\nAfter(function() {\n  console.log('shouty hooks after hook')\n})","features/move_location.feature":"Feature: Move Location \n\nShouts have a range of approximately 1000m\n\n\nScenario: Shouters move location\nGiven Sean is at 0, 1100 \nAnd Sean shouts\nWhen Sean moves to 0, 900\nAnd Sean shouts\nThen Lucy should hear Sean\n\n\n","features/move_location_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('../shouty')\nconst Coordinate = require('../coordinate')\nconst {defineParameterType} = require('cucumber')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\nlet shouty\n\ndefineParameterType({\n  regexp: /(\\d+),(\\d+)/,\n  transformer:(x,y) => new Coordinate(parseInt(x),parseInt(y)),\n  name:'coordinate'\n})\n\nWhen('Sean moves to {int}, {int}', function (x, y) {\n  this.shouty.setLocation('Sean', new Coordinate(x, y))\n});\n"}