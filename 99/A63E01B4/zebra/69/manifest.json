{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    // TODO: actually calculate distance beteen the coordinates.\n    //       e.g. return Math.abs(this.x - other.x)\n    var diffX = Math.abs(this.x - other.x);\n    var diffY = Math.abs(this.y - other.y);\n    return Math.sqrt((diffX * diffX) + (diffY * diffY));\n  }\n};\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('../coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n   it(\"should calculate the distance from another coordinate\", ()=>{\n     var a = new Coordinate(0, 0)\n     var b = new Coordinate(300, 400)\n  \n     assert.equal(a.distanceFrom(b), 500)\n   })\n  \n\n})\n","features/hear_shout.feature":"\nFeature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\n#  Scenario: In range shout is heard\n#    Given Lucy is at 0, 0\n#    And Sean is at 0, 900\n#    When Sean shouts\n#    Then Lucy should hear Sean\n\n#  Scenario: Out of range shout is not heard\n#    Given Lucy is at 0, 0\n#    And Sean is at 800, 800\n    # This means Sean is approximately 1130m from Lucy\n#    When Sean shouts\n#    Then Lucy should have no shout\n\n  Background:\n    Given Lucy is at 0, 0\n\n  @inRange @hears\n  Scenario Outline: only hear in-range shouts\n    And Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <what-Lucy-hears>\n    \n    Examples: some simple examples\n      | Seans-location  | what-Lucy-hears |\n      | 0, 900          | Sean            |\n      | 800, 800        | nothing         |\n    \n  @inRange\n  Scenario: Multiple shouts from one person\n    And Sean is at 0, 500\n    When Sean shouts\n    And Sean shouts\n    Then Lucy should hear 2 shouts from Sean\n\n\n  @hears\n  Scenario: Multiple Shouters\n    Given people are located at\n      | name  | x   | y    |\n      | Lucy  | 0   | 0    |\n      | Sean  | 0   | 500  |\n      | Oscar | 1100 | 0   |\n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should not hear Oscar\n    But Lucy should hear Sean\n\n  Scenario: Shouter should not hear own shout\n    When Lucy shouts\n    Then Lucy should not hear Lucy\n    ","features/shout_steps.js":"var {Before, After, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\n\nBefore(() => \n  console.log('Before Hook3'));\n\nAfter(() => \n  console.log('After Hook3'));\n\n//When('Sean shouts', function () {\n//  shouty.shout('Sean', ARBITARY_MESSAGE)\n//})\n\nWhen('{word} shouts', function (name) {\n  this.shouty.shout(name, ARBITARY_MESSAGE)\n});\n\nThen('{word} should not hear {word}', function (receiver, shouterName) {\n  assert.ok(!this.shouty.getShoutsHeardBy(receiver)[shouterName])\n});\n\nThen('Lucy should hear Sean', function () {\n  assert.ok(this.shouty.getShoutsHeardBy('Lucy').Sean)\n})\n\nThen('Lucy should hear nothing', function () {\n  assert.equal(Object.keys(this.shouty.getShoutsHeardBy('Lucy')).length, 0)\n})\n\nThen('Lucy should hear {int} shouts from Sean', function (int) {\n   assert.equal(this.shouty.getShoutsHeardBy('Lucy').Sean.length, int)\n});\n\n\n\n","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE && distance) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n  }\n}\n","features/world.js":"const { setWorldConstructor } = require('cucumber')\nvar Shouty = require('../shouty')\n\nfunction CustomWorld() {\n  this.shouty = new Shouty()\n}\n\nsetWorldConstructor(CustomWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\necho JASMINE TESTS\necho =============\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\necho CUCUMBER FEATURES\necho =================\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  ${CYBER_DOJO_SANDBOX}/features/*.feature\n","tests/jasmine.json":"{\n    \"spec_dir\": \"tests\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","output":"JASMINE TESTS\n=============\nStarted\n...\n\n\n3 specs, 0 failures\nFinished in 0.01 seconds\n\nCUCUMBER FEATURES\n=================\nBefore Hook3\n.Before Hook2\n..U---After Hook2\n.After Hook\n.After Hook3\n.Before Hook3\n.Before Hook2\n..UUU-UAfter Hook2\n.After Hook\n.After Hook3\n.Before Hook3\n.Before Hook2\n..U---UAfter Hook2\n.After Hook\n.After Hook3\n.Before Hook3\n.SPECIAL HOOK\n.Before Hook2\n.....After Hook2\n.After Hook\n.After Hook3\n.Before Hook3\n.SPECIAL HOOK\n.Before Hook2\n.....After Hook2\n.After Hook\n.After Hook3\n.Before Hook3\n.SPECIAL HOOK\n.Before Hook2\n......After Hook2\n.After Hook\n.After Hook3\n.Before Hook3\n.SPECIAL HOOK\n.Before Hook2\n.......After Hook2\n.After Hook\n.After Hook3\n.Before Hook3\n.Before Hook2\n....After Hook2\n.After Hook\n.After Hook3\n.\n\nWarnings:\n\n1) Scenario: Disable all shouts # ../../../../../sandboxes/zebra/features/do_not_disturb.feature:14\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:6\n   ✔ Before # ../../../../../sandboxes/zebra/features/shouty_hooks.js:9\n   ✔ Given people are located at # ../../../../../sandboxes/zebra/features/location_steps.js:9\n       | name  | x   | y   |\n       | Lucy  | 0   | 0   |\n       | Sean  | 0   | 500 |\n       | Oscar | 200 | 200 |\n   ? Given Do Not Disturb is active\n       Undefined. Implement with the following snippet:\n\n         Given('Do Not Disturb is active', function () {\n           // Write code here that turns the phrase above into concrete actions\n           return 'pending';\n         });\n\n   - When Sean shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:16\n   - And Oscar shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:16\n   - Then Lucy should hear nothing # ../../../../../sandboxes/zebra/features/shout_steps.js:28\n   ✔ After # ../../../../../sandboxes/zebra/features/shouty_hooks.js:12\n   ✔ After # ../../../../../sandboxes/zebra/features/shouty_hooks.js:6\n   ✔ After # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n\n2) Scenario: Disable shouts based on hashtag # ../../../../../sandboxes/zebra/features/do_not_disturb.feature:20\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:6\n   ✔ Before # ../../../../../sandboxes/zebra/features/shouty_hooks.js:9\n   ✔ Given people are located at # ../../../../../sandboxes/zebra/features/location_steps.js:9\n       | name  | x   | y   |\n       | Lucy  | 0   | 0   |\n       | Sean  | 0   | 500 |\n       | Oscar | 200 | 200 |\n   ? Given Lucy disable shouts containing \"#freecoffee\"\n       Undefined. Implement with the following snippet:\n\n         Given('Lucy disable shouts containing {string}', function (string) {\n           // Write code here that turns the phrase above into concrete actions\n           return 'pending';\n         });\n\n   ? When Sean shouts \"#freecoffee\"\n       Undefined. Implement with the following snippet:\n\n         When('Sean shouts {string}', function (string) {\n           // Write code here that turns the phrase above into concrete actions\n           return 'pending';\n         });\n\n   ? When Ocsar shouts \"#freecake\"\n       Undefined. Implement with the following snippet:\n\n         When('Ocsar shouts {string}', function (string) {\n           // Write code here that turns the phrase above into concrete actions\n           return 'pending';\n         });\n\n   - Then Lucy should not hear Sean # ../../../../../sandboxes/zebra/features/shout_steps.js:20\n   ? But Lucy should hear Oscar\n       Undefined. Implement with the following snippet:\n\n         Then('Lucy should hear Oscar', function () {\n           // Write code here that turns the phrase above into concrete actions\n           return 'pending';\n         });\n\n   ✔ After # ../../../../../sandboxes/zebra/features/shouty_hooks.js:12\n   ✔ After # ../../../../../sandboxes/zebra/features/shouty_hooks.js:6\n   ✔ After # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n\n3) Scenario: Enable all shouts # ../../../../../sandboxes/zebra/features/do_not_disturb.feature:27\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:6\n   ✔ Before # ../../../../../sandboxes/zebra/features/shouty_hooks.js:9\n   ✔ Given people are located at # ../../../../../sandboxes/zebra/features/location_steps.js:9\n       | name  | x   | y   |\n       | Lucy  | 0   | 0   |\n       | Sean  | 0   | 500 |\n       | Oscar | 200 | 200 |\n   ? Given Do Not Disturb is inactive\n       Undefined. Implement with the following snippet:\n\n         Given('Do Not Disturb is inactive', function () {\n           // Write code here that turns the phrase above into concrete actions\n           return 'pending';\n         });\n\n   - When Sean shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:16\n   - And Oscar shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:16\n   - Then Lucy should hear Sean # ../../../../../sandboxes/zebra/features/shout_steps.js:24\n   ? And Lucy should hear Oscar\n       Undefined. Implement with the following snippet:\n\n         Then('Lucy should hear Oscar', function () {\n           // Write code here that turns the phrase above into concrete actions\n           return 'pending';\n         });\n\n   ✔ After # ../../../../../sandboxes/zebra/features/shouty_hooks.js:12\n   ✔ After # ../../../../../sandboxes/zebra/features/shouty_hooks.js:6\n   ✔ After # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n\n8 scenarios (3 undefined, 5 passed)\n39 steps (7 undefined, 7 skipped, 25 passed)\n0m00.016s\n","features/location_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar Coordinate = require('../coordinate')\n\n\nGiven('{word} is at {int}, {int}', function (name, x, y) {\n  this.shouty.setLocation(name, new Coordinate(x, y))\n})\n\nGiven('people are located at', function (dataTable) {\n   dataTable.hashes().forEach(row => {\n      this.shouty.setLocation(row.name, new Coordinate(row.x, row.y))\n   })\n});\n","features/shouty_hooks.js":"var {Before, After } = require('cucumber')\n\nBefore({tags: \"@inRange or @hears\"}, () => \n  console.log('SPECIAL HOOK'));\n\nAfter(() => \n  console.log('After Hook'));\n\nBefore(() => \n  console.log('Before Hook2'));\n\nAfter(() => \n  console.log('After Hook2'));","features/do_not_disturb.feature":"\nFeature: Do not disturb \n  \n   As a shouty user, I want to set a 'Do not disturb' so I don't get \n   notified by all or selected shouts.\n   \n   Background:\n    Given people are located at\n      | name  | x   | y    |\n      | Lucy  | 0   | 0    |\n      | Sean  | 0   | 500  |\n      | Oscar | 200 | 200  |\n   \n   Scenario: Disable all shouts\n    Given Do Not Disturb is active\n    When Sean shouts\n    And Oscar shouts \n    Then Lucy should hear nothing\n    \n   Scenario: Disable shouts based on hashtag \n    Given Lucy disable shouts containing \"#freecoffee\"\n    When Sean shouts \"#freecoffee\"\n    When Ocsar shouts \"#freecake\"\n    Then Lucy should not hear Sean\n    But Lucy should hear Oscar\n    \n   Scenario: Enable all shouts\n    Given Do Not Disturb is inactive\n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should hear Sean\n    And Lucy should hear Oscar\n    \n   \n   "}