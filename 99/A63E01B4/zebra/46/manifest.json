{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    // TODO: actually calculate distance beteen the coordinates.\n    //       e.g. return Math.abs(this.x - other.x)\n    var diffX = Math.abs(this.x - other.x);\n    var diffY = Math.abs(this.y - other.y);\n    return Math.sqrt((diffX * diffX) + (diffY * diffY));\n  }\n};\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('../coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n   it(\"should calculate the distance from another coordinate\", ()=>{\n     var a = new Coordinate(0, 0)\n     var b = new Coordinate(300, 400)\n  \n     assert.equal(a.distanceFrom(b), 500)\n   })\n  \n\n})\n","features/hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\n#  Scenario: In range shout is heard\n#    Given Lucy is at 0, 0\n#    And Sean is at 0, 900\n#    When Sean shouts\n#    Then Lucy should hear Sean\n\n#  Scenario: Out of range shout is not heard\n#    Given Lucy is at 0, 0\n#    And Sean is at 800, 800\n    # This means Sean is approximately 1130m from Lucy\n#    When Sean shouts\n#    Then Lucy should have no shout\n\n  Scenario Outline: only hear in-range shouts\n    Given Lucy is at 0, 0\n    And Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <what-Lucy-hears>\n    \n    Examples: some simple examples\n      | Seans-location  | what-Lucy-hears |\n      | 0, 900          | Sean            |\n      | 800, 800        | nothing         |\n    \n  Scenario: Multiple shouts from one person\n    Given Lucy is at 0, 0\n    And Sean is at 0, 500\n    When Sean shouts\n    And Sean shouts\n    Then Lucy should hear 2 shouts from Sean\n\n\n\n  Scenario: Multiple Shouters\n    Given people are located at\n      | name  | x   | y    |\n      | Lucy  | 0   | 0    |\n      | Sean  | 0   | 500  |\n      | Oscar | 1100 | 0   |\n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should not hear Oscar\n    But Lucy should hear Sean\n\n  Scenario: Shouter should not hear own shout\n    Given Lucy is at 0, 0\n    When Lucy shouts\n    Then Lucy should not hear Lucy\n    ","features/shout_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('../shouty')\nvar Coordinate = require('../coordinate')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\nlet shouty\n\nBefore(function() {\n  shouty = new Shouty()\n})\n\n\n\n//When('Sean shouts', function () {\n//  shouty.shout('Sean', ARBITARY_MESSAGE)\n//})\n\nWhen('{word} shouts', function (name) {\n  shouty.shout(name, ARBITARY_MESSAGE)\n});\n\nThen('{word} should not hear {word}', function (receiver, shouterName) {\n  assert.ok(!shouty.getShoutsHeardBy(receiver)[shouterName])\n});\n\nThen('Lucy should hear Sean', function () {\n  assert.ok(shouty.getShoutsHeardBy('Lucy').Sean)\n})\n\nThen('Lucy should hear nothing', function () {\n  assert.equal(Object.keys(shouty.getShoutsHeardBy('Lucy')).length, 0)\n})\n\nThen('Lucy should hear {int} shouts from Sean', function (int) {\n   assert.equal(shouty.getShoutsHeardBy('Lucy').Sean.length, int)\n});\n\n\n\n","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE && distance) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n  }\n}\n","features/world.js":"const { setWorldConstructor } = require('cucumber')\nvar Shouty = require('../shouty')\n\nfunction CustomWorld() {\n  this.shouty = new Shouty()\n}\n\nsetWorldConstructor(CustomWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\necho JASMINE TESTS\necho =============\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\necho CUCUMBER FEATURES\necho =================\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  ${CYBER_DOJO_SANDBOX}/features/*.feature\n","tests/jasmine.json":"{\n    \"spec_dir\": \"tests\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","output":"JASMINE TESTS\n=============\nStarted\n...\n\n\n3 specs, 0 failures\nFinished in 0.008 seconds\n\nCUCUMBER FEATURES\n=================\n.....F.....F......F.....F-....F\n\nFailures:\n\n1) Scenario: only hear in-range shouts # ../../../../../sandboxes/zebra/features/hear_shout.feature:26\n   ✔ Before # ../../../../../sandboxes/zebra/features/location_steps.js:7\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n   ✔ Given Lucy is at 0, 0 # ../../../../../sandboxes/zebra/features/location_steps.js:12\n   ✔ And Sean is at 0, 900 # ../../../../../sandboxes/zebra/features/location_steps.js:12\n   ✔ When Sean shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:19\n   ✖ Then Lucy should hear Sean # ../../../../../sandboxes/zebra/features/shout_steps.js:27\n       TypeError: Cannot read property 'distanceFrom' of undefined\n           at Object.keys.forEach.shouter (/sandboxes/zebra/shouty.js:22:48)\n           at Array.forEach (<anonymous>)\n           at Shouty.getShoutsHeardBy (/sandboxes/zebra/shouty.js:20:30)\n           at CustomWorld.<anonymous> (/sandboxes/zebra/features/shout_steps.js:28:20)\n\n2) Scenario: only hear in-range shouts # ../../../../../sandboxes/zebra/features/hear_shout.feature:27\n   ✔ Before # ../../../../../sandboxes/zebra/features/location_steps.js:7\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n   ✔ Given Lucy is at 0, 0 # ../../../../../sandboxes/zebra/features/location_steps.js:12\n   ✔ And Sean is at 800, 800 # ../../../../../sandboxes/zebra/features/location_steps.js:12\n   ✔ When Sean shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:19\n   ✖ Then Lucy should hear nothing # ../../../../../sandboxes/zebra/features/shout_steps.js:31\n       TypeError: Cannot read property 'distanceFrom' of undefined\n           at Object.keys.forEach.shouter (/sandboxes/zebra/shouty.js:22:48)\n           at Array.forEach (<anonymous>)\n           at Shouty.getShoutsHeardBy (/sandboxes/zebra/shouty.js:20:30)\n           at CustomWorld.<anonymous> (/sandboxes/zebra/features/shout_steps.js:32:35)\n\n3) Scenario: Multiple shouts from one person # ../../../../../sandboxes/zebra/features/hear_shout.feature:29\n   ✔ Before # ../../../../../sandboxes/zebra/features/location_steps.js:7\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n   ✔ Given Lucy is at 0, 0 # ../../../../../sandboxes/zebra/features/location_steps.js:12\n   ✔ And Sean is at 0, 500 # ../../../../../sandboxes/zebra/features/location_steps.js:12\n   ✔ When Sean shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:19\n   ✔ And Sean shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:19\n   ✖ Then Lucy should hear 2 shouts from Sean # ../../../../../sandboxes/zebra/features/shout_steps.js:35\n       TypeError: Cannot read property 'distanceFrom' of undefined\n           at Object.keys.forEach.shouter (/sandboxes/zebra/shouty.js:22:48)\n           at Array.forEach (<anonymous>)\n           at Shouty.getShoutsHeardBy (/sandboxes/zebra/shouty.js:20:30)\n           at CustomWorld.<anonymous> (/sandboxes/zebra/features/shout_steps.js:36:24)\n\n4) Scenario: Multiple Shouters # ../../../../../sandboxes/zebra/features/hear_shout.feature:38\n   ✔ Before # ../../../../../sandboxes/zebra/features/location_steps.js:7\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n   ✔ Given people are located at # ../../../../../sandboxes/zebra/features/location_steps.js:16\n       | name  | x    | y   |\n       | Lucy  | 0    | 0   |\n       | Sean  | 0    | 500 |\n       | Oscar | 1100 | 0   |\n   ✔ When Sean shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:19\n   ✔ And Oscar shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:19\n   ✖ Then Lucy should not hear Oscar # ../../../../../sandboxes/zebra/features/shout_steps.js:23\n       TypeError: Cannot read property 'distanceFrom' of undefined\n           at Object.keys.forEach.shouter (/sandboxes/zebra/shouty.js:22:48)\n           at Array.forEach (<anonymous>)\n           at Shouty.getShoutsHeardBy (/sandboxes/zebra/shouty.js:20:30)\n           at CustomWorld.<anonymous> (/sandboxes/zebra/features/shout_steps.js:24:21)\n   - But Lucy should hear Sean # ../../../../../sandboxes/zebra/features/shout_steps.js:27\n\n5) Scenario: Shouter should not hear own shout # ../../../../../sandboxes/zebra/features/hear_shout.feature:49\n   ✔ Before # ../../../../../sandboxes/zebra/features/location_steps.js:7\n   ✔ Before # ../../../../../sandboxes/zebra/features/shout_steps.js:9\n   ✔ Given Lucy is at 0, 0 # ../../../../../sandboxes/zebra/features/location_steps.js:12\n   ✔ When Lucy shouts # ../../../../../sandboxes/zebra/features/shout_steps.js:19\n   ✖ Then Lucy should not hear Lucy # ../../../../../sandboxes/zebra/features/shout_steps.js:23\n       TypeError: Cannot read property 'distanceFrom' of undefined\n           at Object.keys.forEach.shouter (/sandboxes/zebra/shouty.js:22:48)\n           at Array.forEach (<anonymous>)\n           at Shouty.getShoutsHeardBy (/sandboxes/zebra/shouty.js:20:30)\n           at CustomWorld.<anonymous> (/sandboxes/zebra/features/shout_steps.js:24:21)\n\n5 scenarios (5 failed)\n21 steps (5 failed, 1 skipped, 15 passed)\n0m00.006s\n","features/location_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar Shouty = require('../shouty')\nvar Coordinate = require('../coordinate')\n\nlet shouty\n\nBefore(function() {\n  shouty = new Shouty()\n})\n\n\nGiven('{word} is at {int}, {int}', function (name, x, y) {\n  shouty.setLocation(name, new Coordinate(x, y))\n})\n\nGiven('people are located at', function (dataTable) {\n   dataTable.hashes().forEach(row => {\n      shouty.setLocation(row.name, new Coordinate(row.x, row.y))\n   })\n});\n"}