{"output":"JUnit version 4.12\n....Setup...\n....Teardown...\nPre-teardown...\n.Setup...\n....Teardown...\nPre-teardown...\n.Setup...\n......Teardown...\nPre-teardown...\n.Setup...\n....Teardown...\nPre-teardown...\n.Setup...\n.....Teardown...\nPre-teardown...\n\n5 Scenarios (5 passed)\n23 Steps (23 passed)\n0m0.281s\n\n\nTime: 1.333\n\nOK (31 tests)\n\nMay 25, 2018 4:09:04 AM org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\nINFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@45c7e403: startup date [Fri May 25 04:09:04 GMT 2018]; root of context hierarchy\nMay 25, 2018 4:09:04 AM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\nINFO: Loading XML bean definitions from class path resource [cucumber.xml]\n","Coordinate.java":"public class Coordinate {\n  private int x;\n  private int y;\n\n  public Coordinate(int xCoord, int yCoord){\n    x = xCoord;\n    y = yCoord;\n  }\n\n  public int distanceFrom(Coordinate other){\n    int diffX = Math.abs(this.x - other.x);\n    int diffY = Math.abs(this.y - other.y);\n    return (int)Math.sqrt(diffX * diffX + diffY * diffY);\n  }\n}\n","CoordinateTest.java":"import static org.junit.Assert.assertEquals;\nimport org.junit.Test;\n\npublic class CoordinateTest {\n  @Test\n  public void itCalculatesTheDistanceFromItself() {\n      Coordinate a = new Coordinate(0, 0);\n      assertEquals(0, a.distanceFrom(a));\n  }\n\n  @Test\n  public void itCalculatesTheDistanceFromAnotherCoordinateAlongXAxis() {\n      Coordinate a = new Coordinate(0, 0);\n      Coordinate b = new Coordinate(600, 0);\n      assertEquals(600, a.distanceFrom(b));\n  }\n\n  @Test\n  public void itCalculatesTheDistanceFromAnotherCoordinate() {\n       Coordinate a = new Coordinate(0, 0);\n       Coordinate b = new Coordinate(300, 400);\n       assertEquals(500, a.distanceFrom(b));\n   }\n}\n","RunCukesTest.java":"import cucumber.api.junit.Cucumber;\nimport cucumber.api.CucumberOptions;\nimport cucumber.api.SnippetType;\nimport org.junit.runner.RunWith;\n\n@RunWith(Cucumber.class)\n@CucumberOptions(tags={}, strict=true, monochrome=true, format=\"junit:output\", snippets=SnippetType.CAMELCASE)\npublic class RunCukesTest {\n    // this is the adapter/bridge code\n    // between cucumber jvm and junit\n    // you do not need to edit this\n}\n","ShoutSteps.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport cucumber.api.java.en.*;\nimport cucumber.api.PendingException;\nimport java.util.*;\nimport org.springframework.beans.factory.annotation.Autowired;\n\npublic class ShoutSteps {\n    \n    private final String ARBITRARY_MESSAGE = \"Hello, world\";\n    \n    @Autowired\n    private ShoutyHelper shouty;\n\n    @When(\"^(Sean|Oscar) shouts$\")\n    public void personShouts(String name) throws Throwable {\n        shouty.shout(name, ARBITRARY_MESSAGE);\n    }\n\n    @Then(\"^Lucy should hear Sean$\")\n    public void lucyShouldHearHim() throws Throwable {\n        Assert.assertEquals(1, shouty.getShoutsHeardBy(\"Lucy\").size());\n    }\n    \n    @Then(\"^Lucy should not hear Oscar$\")\n    public void lucyShouldNotHearHim() throws Throwable {\n        Assert.assertEquals(1, shouty.getShoutsHeardBy(\"Lucy\").size());\n    }\n\n    @Then(\"^(Lucy|Sean) should hear nothing$\")\n    public void lucy_should_hear_nothing(String name) throws Throwable {\n        Assert.assertEquals(0, shouty.getShoutsHeardBy(name).size());\n    }\n    \n    @Then(\"^Lucy should hear 2 shouts from Sean$\")\n    public void lucyShouldHear2ShoutsFromSean() {\n        Assert.assertEquals(2, shouty.getShoutsHeardBy(\"Lucy\").get(\"Sean\").size());\n    }\n    \n    \n}\n","Shouty.java":"import java.util.*;\n\n\npublic class Shouty {\n  private static final int MESSAGE_RANGE = 1000;\n  private Map<String, Coordinate> locations = new HashMap<String, Coordinate>();\n  private Map<String, List<String> > shouts = new HashMap<String, List<String> >();\n\n  public void setLocation(String person, Coordinate location) {\n      locations.put(person, location);\n  }\n\n  public void shout(String shouter, String shout) {\n      if (!shouts.containsKey(shouter)) {\n          List<String> personsShouts = new ArrayList<String>();\n          shouts.put(shouter, personsShouts);\n      }\n\n      shouts.get(shouter).add(shout);\n  }\n\n  public Map<String, List<String> > getShoutsHeardBy(String listener) {\n      HashMap<String, List<String> > shoutsHeard = new HashMap<String, List<String> >();\n\n      for (Map.Entry<String, List<String> > entry : shouts.entrySet()) {\n          String shouter = entry.getKey();\n          List<String> personsShouts = entry.getValue();\n          int distance = locations.get(listener).distanceFrom(locations.get(shouter));\n          if (!listener.equals(shouter) && distance < MESSAGE_RANGE)\n              shoutsHeard.put(shouter, personsShouts);\n      }\n\n      return shoutsHeard;\n  }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /cucumber/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi\n","cucumber.xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\">\n\n    <bean class=\"ShoutyHelper\" autowire-candidate=\"true\" scope=\"cucumber-glue\"/>\n\n    <context:annotation-config/>\n\n</beans>\n","hear_shout.feature":"Feature: Hearing a shout\n\n    Shouts have a range of approximately 1000 metres\n\n    Background:\n        Given Lucy is at 0, 0\n\n    @wip\n    Scenario Outline: Only in range shouts are heard\n        Given Sean is at <Seans-location>\n        When Sean shouts\n        Then Lucy should hear <what-lucy-hears>\n    \n        Examples: \n            | Seans-location | what-lucy-hears |\n            | 0, 900         | Sean            |\n            | 800, 800       | nothing         |\n        \n    @wip2\n    Scenario: Multiple shouters\n        Given people are located at\n            | name | x    | y   |\n            | Lucy | 0    | 0   |\n            | Sean | 0    | 500 |\n            | Oscar| 1100 | 0   |\n        When Sean shouts\n        And Oscar shouts\n        Then Lucy should not hear Oscar\n        But Lucy should hear Sean\n\n     Scenario: Shouters do not hear their own shouts\n        Given Sean is at 0, 0\n        When Sean shouts\n        Then Sean should hear nothing\n        \n     Scenario: Multiple shouts from one person\n        Given Sean is at 0, 500\n        When Sean shouts\n        And Sean shouts\n        Then Lucy should hear 2 shouts from Sean","LocationSteps.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport cucumber.api.java.en.*;\nimport cucumber.api.PendingException;\nimport java.util.*;\nimport org.springframework.beans.factory.annotation.Autowired;\n\npublic class LocationSteps {\n    \n    class PersonLocation {\n      String name;\n      int x;\n      int y;\n    }\n\n    @Autowired\n    private ShoutyHelper shouty;\n\n    @Given(\"^(Lucy|Sean|Oscar) is at (\\\\d+), (\\\\d+)$\")\n    public void personIsAt(String name, int xCoord, int yCoord) throws Throwable {\n        shouty.setLocation(name, new Coordinate(xCoord, yCoord));\n    }\n    \n    @Given(\"^people are located at$\")\n    public void peopleAreLocatedAt(List<PersonLocation> table) throws Throwable {\n        for (PersonLocation row: table) {\n           shouty.setLocation(row.name, new Coordinate(row.x, row.y));\n        }\n    }\n}\n","ShoutyHelper.java":"\nimport org.springframework.stereotype.Component;\nimport org.springframework.context.annotation.Scope;\n\n@Component\n@Scope(\"cucumber-glue\")\npublic class ShoutyHelper extends Shouty {\n}","ShoutyHooks.java":"import cucumber.api.java.Before;\nimport cucumber.api.java.After;\n\npublic class ShoutyHooks {\n    @Before\n    public void setup() {\n        System.out.println(\"Setup...\");\n    }\n    \n    @After(order=1)\n    public void preteardown() {\n       System.out.println(\"Pre-teardown...\");\n    }\n    \n    @After(order=2)\n    public void teardown() {\n        System.out.println(\"Teardown...\");\n    }\n}"}