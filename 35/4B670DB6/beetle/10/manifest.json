{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    // TODO: actually calculate distance beteen the coordinates.\n    //       e.g. return Math.abs(this.x - other.x)\n\n    return Math.sqrt(Math.abs(this.x - other.x)^2+Math.abs(this.y-other.y)^2)\n  }\n};\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('../coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n  // it(\"should calculate the distance from another coordinate\", ()=>{\n  //   var a = new Coordinate(0, 0)\n  //   var b = new Coordinate(300, 400)\n  //\n  //   assert.equal(a.distanceFrom(b), 500)\n  // })\n})\n","features/shout_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('../shouty')\nvar Coordinate = require('../coordinate')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\nlet shouty\n\nlet value = 0\nlet factor = 0\nlet result = 0\nGiven('a value {int}', function (int) {\n    // Write code here that turns the phrase above into concrete actions\n    value = int\n});\n\n When('I multiply it by {int}', function (int) {\n           // Write code here that turns the phrase above into concrete actions\n           result = factor * value\n });\nThen('the result should be {int}', function (int) {\n           // Write code here that turns the phrase above into concrete actions\n           assert.equal(result, int)\n});\n\n/*\nBefore(function() {\n  shouty = new Shouty()\n})\n\nGiven('Lucy is at {int}, {int}', function (x, y) {\n  shouty.setLocation('Lucy', new Coordinate(x, y))\n})\n\nGiven('Sean is at {int}, {int}', function (x, y) {\n  shouty.setLocation('Sean', new Coordinate(x, y))\n})\n\nWhen('Sean shouts', function () {\n  shouty.shout('Sean', ARBITARY_MESSAGE)\n})\n\nThen('Lucy should hear Sean', function () {\n  assert.equal(Object.keys(shouty.getShoutsHeardBy('Lucy')).length, 1)\n})\n\nThen('Lucy should hear nothing', function () {\n  assert.equal(Object.keys(shouty.getShoutsHeardBy('Lucy')).length, 0)\n})\n*/","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n  }\n}\n","features/world.js":"const { setWorldConstructor } = require('cucumber')\n\nfunction CustomWorld() {\n}\n\nsetWorldConstructor(CustomWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\necho JASMINE TESTS\necho =============\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\necho CUCUMBER FEATURES\necho =================\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  ${CYBER_DOJO_SANDBOX}/features/*.feature\n","tests/jasmine.json":"{\n    \"spec_dir\": \"tests\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","output":"JASMINE TESTS\n=============\nStarted\n.F\n\nFailures:\n1) coordinate class should calculate the distance from another coordinate along X axis\n  Message:\n    AssertionError [ERR_ASSERTION]: 24.49489742783178 == 600\n  Stack:\n    AssertionError [ERR_ASSERTION]: 24.49489742783178 == 600\n        at UserContext.it (/sandboxes/beetle/tests/coordinate.test.js:15:12)\n\n2 specs, 1 failure\nFinished in 0.009 seconds\n\nCUCUMBER FEATURES\n=================\n..F..F..F..F\n\nFailures:\n\n1) Scenario: Multiple Example tables will run # ../../../../../sandboxes/beetle/features/multipleExamples.feature:9\n   ✔ Given a value 5 # ../../../../../sandboxes/beetle/features/shout_steps.js:12\n   ✔ When I multiply it by 2 # ../../../../../sandboxes/beetle/features/shout_steps.js:17\n   ✖ Then the result should be 10 # ../../../../../sandboxes/beetle/features/shout_steps.js:21\n       AssertionError [ERR_ASSERTION]: 0 == 10\n           + expected - actual\n\n           -0\n           +10\n\n           at CustomWorld.<anonymous> (/sandboxes/beetle/features/shout_steps.js:23:19)\n\n2) Scenario: Multiple Example tables will run # ../../../../../sandboxes/beetle/features/multipleExamples.feature:10\n   ✔ Given a value 3 # ../../../../../sandboxes/beetle/features/shout_steps.js:12\n   ✔ When I multiply it by 3 # ../../../../../sandboxes/beetle/features/shout_steps.js:17\n   ✖ Then the result should be 9 # ../../../../../sandboxes/beetle/features/shout_steps.js:21\n       AssertionError [ERR_ASSERTION]: 0 == 9\n           + expected - actual\n\n           -0\n           +9\n\n           at CustomWorld.<anonymous> (/sandboxes/beetle/features/shout_steps.js:23:19)\n\n3) Scenario: Multiple Example tables will run # ../../../../../sandboxes/beetle/features/multipleExamples.feature:14\n   ✔ Given a value 15 # ../../../../../sandboxes/beetle/features/shout_steps.js:12\n   ✔ When I multiply it by 10 # ../../../../../sandboxes/beetle/features/shout_steps.js:17\n   ✖ Then the result should be 150 # ../../../../../sandboxes/beetle/features/shout_steps.js:21\n       AssertionError [ERR_ASSERTION]: 0 == 150\n           + expected - actual\n\n           -0\n           +150\n\n           at CustomWorld.<anonymous> (/sandboxes/beetle/features/shout_steps.js:23:19)\n\n4) Scenario: Multiple Example tables will run # ../../../../../sandboxes/beetle/features/multipleExamples.feature:15\n   ✔ Given a value 25 # ../../../../../sandboxes/beetle/features/shout_steps.js:12\n   ✔ When I multiply it by 12 # ../../../../../sandboxes/beetle/features/shout_steps.js:17\n   ✖ Then the result should be 300 # ../../../../../sandboxes/beetle/features/shout_steps.js:21\n       AssertionError [ERR_ASSERTION]: 0 == 300\n           + expected - actual\n\n           -0\n           +300\n\n           at CustomWorld.<anonymous> (/sandboxes/beetle/features/shout_steps.js:23:19)\n\n4 scenarios (4 failed)\n12 steps (4 failed, 8 passed)\n0m00.007s\n","features/multipleExamples.feature":"Feature: There is a scenario outline with multiple tables\nScenario Outline: Multiple Example tables will run\nGiven a value <value>\nWhen I multiply it by <factor>\nThen the result should be <result>\n\nExamples:\n|value|factor|result|\n| 5   | 2    | 10   |\n| 3   | 3    |  9   |\n\nExamples:\n|value|factor|result|\n| 15  | 10   | 150|\n| 25  | 12   | 300|","feature/multi_steps.js":""}