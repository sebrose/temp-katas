{"cyber-dojo.sh":"# Test output can be formatted as progress or documentation\n# cucumber -f progress ./*.feature -r .\n\nrspec . --format progress\n","coordinate_spec.rb":"require 'coordinate'\n\ndescribe Coordinate do\n  it \"calculates the distance from itself\" do\n    a = Coordinate.new(0, 0)\n    expect(a.distance_from(a)).to eq(0)\n  end\n\n  it \"calculates the distance from another coordinate along x axis\" do\n    a = Coordinate.new(0, 0)\n    b = Coordinate.new(1000, 0)\n    expect(a.distance_from(b)).to eq(1000)\n  end\nend\n","coordinate.rb":"class Coordinate\n  attr_reader :x, :y\n\n  def initialize(x, y)\n    @x = x\n    @y = y\n  end\n\n  def distance_from(other)\n    # TODO: actually caluculate distance. I think we need to use Pythagorean theorem?\n    0\n  end\nend\n","env.rb":"","hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\n  Scenario: In range shout is heard\n    Given Lucy is at 0, 0\n    And Sean is at 0, 900\n    When Sean shouts\n    Then Lucy should hear Sean\n\n  Scenario: Out of range shout is not heard\n    Given Lucy is at 0, 0\n    And Sean is at 0, 1100\n    When Sean shouts\n    Then Lucy should hear nothing\n","shout_steps.rb":"require 'shouty'\n\nARBITRARY_MESSAGE = \"Hello, world\"\n\nBefore do\n  @shouty = Shouty.new\nend\n\nGiven(/^Lucy is at (\\d+), (\\d+)$/) do |x, y|\n  @shouty.set_location(\"Lucy\", Coordinate.new(x, y))\nend\n\nGiven(/^Sean is at (\\d+), (\\d+)$/) do |x, y|\n  @shouty.set_location(\"Sean\", Coordinate.new(x, y))\nend\n\nWhen(/^Sean shouts$/) do\n  @shouty.shout(\"Sean\", ARBITRARY_MESSAGE)\nend\n\nThen(/^Lucy should hear Sean$/) do\n  expect(@shouty.messages_heard_by(\"Lucy\").length).to eq(1)\nend\n\nThen(/^Lucy should hear nothing$/) do\n  expect(@shouty.messages_heard_by(\"Lucy\")).to eq({})\nend\n","shouty.rb":"require_relative './coordinate'\n\nclass Shouty\n    MESSAGE_RANGE = 1000\n\n    def initialize\n      @locations = {}\n      @messages = {}\n    end\n\n    def set_location(person, location)\n      @locations[person] = location\n    end\n\n    def shout(person, message)\n      @messages[person] = message\n    end\n\n    def messages_heard_by(listener)\n      result = {}\n\n      @messages.each do |shouter, message|\n        distance = @locations[listener].distance_from(@locations[shouter])\n        if (distance < MESSAGE_RANGE)\n          result[shouter] = message\n        end\n      end\n\n      result\n    end\nend\n","spec_helper.rb":"# This file was generated by the `rspec --init` command. Conventionally, all\n# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.\n# The generated `.rspec` file contains `--require spec_helper` which will cause\n# this file to always be loaded, without a need to explicitly require it in any\n# files.\n#\n# Given that it is always loaded, you are encouraged to keep this file as\n# light-weight as possible. Requiring heavyweight dependencies from this file\n# will add to the boot time of your test suite on EVERY test run, even for an\n# individual file that may not need all of that loaded. Instead, consider making\n# a separate helper file that requires the additional dependencies and performs\n# the additional setup, and require it from the spec files that actually need\n# it.\n#\n# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration\nRSpec.configure do |config|\n  # rspec-expectations config goes here. You can use an alternate\n  # assertion/expectation library such as wrong or the stdlib/minitest\n  # assertions if you prefer.\n  config.expect_with :rspec do |expectations|\n    # This option will default to `true` in RSpec 4. It makes the `description`\n    # and `failure_message` of custom matchers include text for helper methods\n    # defined using `chain`, e.g.:\n    #     be_bigger_than(2).and_smaller_than(4).description\n    #     # => \"be bigger than 2 and smaller than 4\"\n    # ...rather than:\n    #     # => \"be bigger than 2\"\n    expectations.include_chain_clauses_in_custom_matcher_descriptions = true\n  end\n\n  # rspec-mocks config goes here. You can use an alternate test double\n  # library (such as bogus or mocha) by changing the `mock_with` option here.\n  config.mock_with :rspec do |mocks|\n    # Prevents you from mocking or stubbing a method that does not exist on\n    # a real object. This is generally recommended, and will default to\n    # `true` in RSpec 4.\n    mocks.verify_partial_doubles = true\n  end\n\n  # This option will default to `:apply_to_host_groups` in RSpec 4 (and will\n  # have no way to turn it off -- the option exists only for backwards\n  # compatibility in RSpec 3). It causes shared context metadata to be\n  # inherited by the metadata hash of host groups and examples, rather than\n  # triggering implicit auto-inclusion in groups with matching metadata.\n  config.shared_context_metadata_behavior = :apply_to_host_groups\n\n# The settings below are suggested to provide a good initial experience\n# with RSpec, but feel free to customize to your heart's content.\n=begin\n  # This allows you to limit a spec run to individual examples or groups\n  # you care about by tagging them with `:focus` metadata. When nothing\n  # is tagged with `:focus`, all examples get run. RSpec also provides\n  # aliases for `it`, `describe`, and `context` that include `:focus`\n  # metadata: `fit`, `fdescribe` and `fcontext`, respectively.\n  config.filter_run_when_matching :focus\n\n  # Allows RSpec to persist some state between runs in order to support\n  # the `--only-failures` and `--next-failure` CLI options. We recommend\n  # you configure your source control system to ignore this file.\n  config.example_status_persistence_file_path = \"spec/examples.txt\"\n\n  # Limits the available syntax to the non-monkey patched syntax that is\n  # recommended. For more details, see:\n  #   - http://rspec.info/blog/2012/06/rspecs-new-expectation-syntax/\n  #   - http://www.teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/\n  #   - http://rspec.info/blog/2014/05/notable-changes-in-rspec-3/#zero-monkey-patching-mode\n  config.disable_monkey_patching!\n\n  # This setting enables warnings. It's recommended, but in some cases may\n  # be too noisy due to issues in dependencies.\n  config.warnings = true\n\n  # Many RSpec users commonly either run the entire suite or an individual\n  # file, and it's useful to allow more verbose output when running an\n  # individual spec file.\n  if config.files_to_run.one?\n    # Use the documentation formatter for detailed output,\n    # unless a formatter has already been configured\n    # (e.g. via a command-line flag).\n    config.default_formatter = \"doc\"\n  end\n\n  # Print the 10 slowest examples and example groups at the\n  # end of the spec run, to help surface which specs are running\n  # particularly slow.\n  config.profile_examples = 10\n\n  # Run specs in random order to surface order dependencies. If you find an\n  # order dependency and want to debug it, you can fix the order by providing\n  # the seed, which is printed after each run.\n  #     --seed 1234\n  config.order = :random\n\n  # Seed global randomization in this process using the `--seed` CLI option.\n  # Setting this allows you to use `--seed` to deterministically reproduce\n  # test failures related to randomization by passing the same `--seed` value\n  # as the one that triggered the failure.\n  Kernel.srand config.seed\n=end\nend\n","hiker.rb":"\ndef answer(lhs,rhs)\n  lhs * rhs\nend\n","hiker_stepdefs.rb":"Given /^the hitch-hiker selects some tiles$/ do\n\nend\n\nWhen /^they spell (\\d+) times (\\d+)$/ do |x, y|\n    @result = answer(x.to_i,y.to_i)\nend\n\nThen /^the score is (\\d+)$/ do |answer|\n    expect(answer.to_i).to eq(@result)\nend\n","instructions":"\nISBN - International Standard Book Number\n-----------------------------------------\nThere are two ISBN standards: ISBN-10 and ISBN-13.\nSupport for ISBN-13 is essential, whereas support\nfor ISBN-10 is optional.\nHere are some valid examples of each:\n\nISBN-10:    0471958697\n            0 471 60695 2\n            0-470-84525-2\n            0-321-14653-0\n\nISBN-13:    9780470059029\n            978 0 471 48648 0\n            978-0596809485\n            978-0-13-149505-0\n            978-0-262-13472-9\n\nISBN-10 is made up of 9 digits plus a check digit (which\nmay be 'X') and ISBN-13 is made up of 12 digits plus a\ncheck digit. Spaces and hyphens may be included in a code,\nbut are not significant. This means that 9780471486480 is\nequivalent to 978-0-471-48648-0 and 978 0 471 48648 0.\n\nThe check digit for ISBN-10 is calculated by multiplying\neach digit by its position (i.e., 1 x 1st digit, 2 x 2nd\ndigit, etc.), summing these products together and taking\nmodulo 11 of the result (with 'X' being used if the result\nis 10).\n\nThe check digit for ISBN-13 is calculated by multiplying\neach digit alternately by 1 or 3 (i.e., 1 x 1st digit,\n3 x 2nd digit, 1 x 3rd digit, 3 x 4th digit, etc.), summing\nthese products together, taking modulo 10 of the result\nand subtracting this value from 10, and then taking the\nmodulo 10 of the result again to produce a single digit.\n\n\nBasic task:\nCreate a function that takes a string and returns true\nif that is a valid ISBN-13 and false otherwise.\n\nAdvanced task:\nAlso return true if the string is a valid ISBN-10.","output":"/usr/local/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- coordinate (LoadError)\n\tfrom /usr/local/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n\tfrom /sandboxes/kingfisher/coordinate_spec.rb:1:in `<top (required)>'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/configuration.rb:1435:in `load'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/configuration.rb:1435:in `block in load_spec_files'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/configuration.rb:1433:in `each'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/configuration.rb:1433:in `load_spec_files'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/runner.rb:100:in `setup'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/runner.rb:86:in `run'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/runner.rb:71:in `run'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/lib/rspec/core/runner.rb:45:in `invoke'\n\tfrom /usr/local/bundle/gems/rspec-core-3.5.4/exe/rspec:4:in `<top (required)>'\n\tfrom /usr/local/bundle/bin/rspec:22:in `load'\n\tfrom /usr/local/bundle/bin/rspec:22:in `<main>'\n"}