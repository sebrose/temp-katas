{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    // TODO: actually calculate distance beteen the coordinates.\n    //       e.g. return Math.abs(this.x - other.x);\n\n    return 0\n  }\n};\n","shouty_hooks.js":"// This file is empty\n","parameter_types.js":"// This file is empty\n","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n  }\n}\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure!\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  /sandboxes/$CYBER_DOJO_AVATAR_NAME/features/*.feature\n","output":"Started\n\n\nNo specs found\nFinished in 0.002 seconds\n\n.......F\n\nFailures:\n\n1) Scenario: Out of range shout is not heard # ../../../../../sandboxes/hyena/features/hear_shout.feature:11\n   ✔ Given Lucy is at 0, 0 # ../../../../../sandboxes/hyena/features/shout_steps.js:10\n   ✔ And Sean is at 800, 800 # ../../../../../sandboxes/hyena/features/shout_steps.js:14\n   ✔ When Sean shouts # ../../../../../sandboxes/hyena/features/shout_steps.js:18\n   ✖ Then Lucy should hear nothing # ../../../../../sandboxes/hyena/features/shout_steps.js:26\n       AssertionError [ERR_ASSERTION]: 1 == 0\n           + expected - actual\n\n           -1\n           +0\n\n           at World.<anonymous> (/sandboxes/hyena/features/shout_steps.js:27:12)\n\n2 scenarios (1 failed, 1 passed)\n8 steps (1 failed, 7 passed)\n0m00.005s\n","features/hear_shout.feature":"Feature: Hear Shout\n\n  Shouts have a range of approximately 1000m\n\n  Scenario: In range shout is heard\n    Given Lucy is at 0, 0\n    And Sean is at 0, 900\n    When Sean shouts\n    Then Lucy should hear Sean\n\n  Scenario: Out of range shout is not heard\n    Given Lucy is at 0, 0\n    And Sean is at 800, 800\n    When Sean shouts\n    Then Lucy should hear nothing\n","features/shout_steps.js":"var {defineSupportCode} = require('cucumber')\nvar assert = require('assert')\nvar Shouty = require('../shouty')\nvar Coordinate = require('../coordinate')\n\ndefineSupportCode(function({Given, When, Then}) {\n  const ARBITARY_MESSAGE = 'Hello, world'\n  var shouty = new Shouty()\n\n  Given('Lucy is at {int}, {int}', function (x, y) {\n    shouty.setLocation('Lucy', new Coordinate(x, y))\n  })\n\n  Given('Sean is at {int}, {int}', function (x, y) {\n    shouty.setLocation('Sean', new Coordinate(x, y))\n  })\n\n  When('Sean shouts', function () {\n    shouty.shout('Sean', ARBITARY_MESSAGE)\n  })\n\n  Then('Lucy should hear Sean', function () {\n    assert.equal(Object.keys(shouty.getShoutsHeardBy('Lucy')).length, 1)\n  })\n\n  Then('Lucy should hear nothing', function () {\n    assert.equal(Object.keys(shouty.getShoutsHeardBy('Lucy')).length, 0)\n  })\n\n})\n","feature/world.js":"const { setWorldConstructor } = require('cucumber')\n\nfunction CustomWorld() {\n}\n\nsetWorldConstructor(CustomWorld)\n","tests/jasmine.json":"{\n    \"spec_dir\": \".\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('./coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n  // it(\"should calculate the distance from another coordinate\", ()=>{\n  //   var a = new Coordinate(0, 0)\n  //   var b = new Coordinate(300, 400)\n  //\n  //   assert.equal(a.distanceFrom(b), 500)\n  // })\n})\n"}