{"coordinate.js":"module.exports = function Coordinate(x, y) {\n\n  this.x = x\n  this.y = y\n\n  this.distanceFrom = function(other) {\n    var xDelta = Math.abs(this.x - other.x);\n    var yDelta = Math.abs(this.y - other.y);\n    \n    return Math.sqrt((xDelta * xDelta) + (yDelta * yDelta))\n  }\n};\n","tests/coordinate.test.js":"var assert = require('assert')\nvar Coordinate = require('../coordinate')\n\ndescribe(\"coordinate class\", () => {\n\n  it(\"should calculate the distance from itself\", () => {\n    var a = new Coordinate(0, 0)\n    assert.equal(a.distanceFrom(a), 0)\n  })\n\n  it(\"should calculate the distance from another coordinate along X axis\", ()=>{\n    var a = new Coordinate(0, 0)\n    var b = new Coordinate(600, 0)\n\n    assert.equal(a.distanceFrom(b), 600)\n  })\n\n  it(\"should calculate the distance from another coordinate\", ()=>{\n     var a = new Coordinate(0, 0)\n     var b = new Coordinate(300, 400)\n  \n     assert.equal(a.distanceFrom(b), 500)\n  })\n})\n","features/hear_shout.feature":"Feature: Hear Shout\n  Shouts have a range of approximately 1000m\n\n  Background:\n    Given Lucy is at 0, 0\n\n  Scenario Outline: only hear in-range shouts\n    Given Sean is at <Seans-location>\n    When Sean shouts\n    Then Lucy should hear <Lucy-hears-shouts> shouts from Sean\n    \n    Examples: deez examples\n      | Seans-location | Lucy-hears-shouts |\n      | 0, 900         | 1                 |\n      | 800, 900       | 0                 |\n\n  Scenario: Multiple shouts from one person\n    Given Sean is at 0, 500\n    When Sean shouts\n    And Sean shouts\n    Then Lucy should hear 2 shouts from Sean\n\n  Scenario: Multiple Shouters\n    Given people are located at\n      | name  | x    | y    |\n      | Lucy  | 0    | 0    |\n      | Sean  | 0    | 500  |\n      | Oscar | 1100 | 0    |\n    When Sean shouts\n    And Oscar shouts\n    Then Lucy should hear 0 shouts from Oscar\n    But Lucy should hear 1 shouts from Sean\n    \n  Scenario: Own shouts are not heard\n    When Lucy shouts\n    Then Lucy should hear 0 shouts from Lucy","features/shout_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\n\nconst ARBITARY_MESSAGE = 'Hello, world'\n\nBefore(function() {\n  shouty = this.shouty\n})\n\nWhen('{word} shouts', function (name) {\n  shouty.shout(name, ARBITARY_MESSAGE)\n})\n\nThen('{word} should hear {int} shouts from {word}', function (listener, count, shouter) {\n  var shouts = shouty.getShoutsHeardBy(listener);\n  \n  assert.equal((shouts[shouter] || []).length, count)\n})\n","shouty.js":"module.exports = function Shouty() {\n  const MESSAGE_RANGE = 1000\n  this.locations = {}\n  this.shouts = {}\n\n  this.setLocation = function(person, coordinate) {\n    this.locations[person] = coordinate\n  }\n\n  this.shout = function(person, shout) {\n    if(!(person in this.shouts)) {\n      this.shouts[person] = []\n    }\n    this.shouts[person].push(shout)\n  }\n\n  this.getShoutsHeardBy = function(listener) {\n    var shoutsHeard = {}\n\n    Object.keys(this.shouts).forEach(shouter => {\n        if (shouter === listener) {\n          return;\n        }\n      \n        var personsShouts = this.shouts[shouter]\n        var distance = this.locations[listener].distanceFrom(this.locations[shouter])\n\n        if(distance < MESSAGE_RANGE) {\n          shoutsHeard[shouter] = personsShouts\n        }\n    })\n\n    return shoutsHeard\n  }\n}\n","features/world.js":"const { setWorldConstructor } = require('cucumber')\nvar Shouty = require('../shouty')\n\nfunction MadWorld() {\n  this.shouty = new Shouty()\n}\n\nsetWorldConstructor(MadWorld)\n","cyber-dojo.sh":"NODE_VERSION=8.4.0\n\necho JASMINE TESTS\necho =============\n\nn use ${NODE_VERSION} /usr/local/lib/node_modules/jasmine/bin/jasmine \\\n  JASMINE_CONFIG_PATH=tests/jasmine.json\n\n# You have to cd to a specific folder because\n#   ~/node_modules/cucumber/bin/cucumber.js\n# contains the line\n# require('../lib/cli/run.js').default();\n# Go figure! Still not as shit as java though...\n\ncd ~/node_modules/cucumber/bin\n\nexport NODE_PATH=/home/$CYBER_DOJO_AVATAR_NAME/node_modules\n\necho CUCUMBER FEATURES\necho =================\n\n./cucumber.js \\\n  --format-options '{\"colorsEnabled\":false}' \\\n  --format-options '{\"snippetInterface\":\"synchronous\"}' \\\n  ${CYBER_DOJO_SANDBOX}/features/*.feature\n","tests/jasmine.json":"{\n    \"spec_dir\": \"tests\",\n    \"spec_files\": [ \"*[tT]est.js\" ],\n    \"helpers\": [ \"*helper.js\" ]\n}\n","output":"JASMINE TESTS\n=============\nStarted\n...\n\n\n3 specs, 0 failures\nFinished in 0.007 seconds\n\nCUCUMBER FEATURES\n=================\n.....................................\n\n5 scenarios (5 passed)\n22 steps (22 passed)\n0m00.007s\n","features/location_steps.js":"var {Before, Given, When, Then } = require('cucumber')\nvar assert = require('assert')\nvar Coordinate = require('../coordinate')\n\nGiven('people are located at', function (datatable) {\n  datatable.hashes().forEach(row => {\n     shouty.setLocation(row.name, new Coordinate(row.x, row.y))\n  });\n})\n\nGiven('{word} is at {int}, {int}', function (name, x, y) {\n  shouty.setLocation(name, new Coordinate(x, y))\n})","features/shouty_hooks.js":"var {Before, After} = require('cucumber')\n\nBefore(function() {\n  shouty = this.shouty\n});\n\n\nAfter(function() {\n  \n});"}