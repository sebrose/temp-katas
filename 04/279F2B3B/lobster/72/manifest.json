{"Coordinate.java":"public class Coordinate {\n  private int x;\n  private int y;\n\n  public Coordinate(int xCoord, int yCoord){\n    x = xCoord;\n    y = yCoord;\n  }\n\n  public int distanceFrom(Coordinate other){\n    // TODO: actually calculate distance beteen the coordinates.\n    //       e.g. return Math.abs(x - other.x);\n      \n    int diff1 = Math.abs(x - other.x);\n    int diff2 = Math.abs(y - other.y);\n    return (int)Math.sqrt(Math.pow(diff1, 2) + Math.pow(diff2, 2)); \n  }\n}\n","CoordinateTest.java":"import static org.junit.Assert.assertEquals;\nimport org.junit.Test;\n\npublic class CoordinateTest {\n  @Test\n  public void itCalculatesTheDistanceFromItself() {\n      Coordinate a = new Coordinate(0, 0);\n      assertEquals(0, a.distanceFrom(a));\n  }\n\n  @Test\n  public void itCalculatesTheDistanceFromAnotherCoordinateAlongXAxis() {\n      Coordinate a = new Coordinate(0, 0);\n      Coordinate b = new Coordinate(600, 0);\n      assertEquals(600, a.distanceFrom(b));\n  }\n\n  @Test\n  public void itCalculatesTheDistanceFromAnotherCoordinate() {\n      Coordinate a = new Coordinate(0, 0);\n      Coordinate b = new Coordinate(300, 400);\n      assertEquals(500, a.distanceFrom(b));\n  }\n}\n","RunCukesTest.java":"import cucumber.api.junit.Cucumber;\nimport cucumber.api.CucumberOptions;\nimport cucumber.api.SnippetType;\nimport org.junit.runner.RunWith;\n\n@RunWith(Cucumber.class)\n@CucumberOptions(strict=true, monochrome=true, format=\"junit:output\", snippets=SnippetType.CAMELCASE)\npublic class RunCukesTest {\n    // this is the adapter/bridge code\n    // between cucumber jvm and junit\n    // you do not need to edit this\n}\n","ShoutSteps.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport cucumber.api.java.en.*;\nimport cucumber.api.PendingException;\nimport org.springframework.beans.factory.annotation.*;\nimport java.util.List;\n\npublic class ShoutSteps {\n    private final String ARBITRARY_MESSAGE = \"Hello, world\";\n\n    private final ShoutyHelper shoutyHelper = new ShoutyHelper();\n\n    @When(\"^([A-Z][a-z]*) shouts$\")\n    public void shouterShouts(String shouter) throws Throwable {\n        shoutyHelper.shout(shouter, ARBITRARY_MESSAGE);\n    }\n\n    @Then(\"^([A-Z][a-z]*) should hear him$\")\n    public void userShouldHearHim(String user) throws Throwable {\n        Assert.assertEquals(1, shoutyHelper.getShoutsHeardBy(user).size());\n    }\n\n    @Then(\"^([A-Z][a-z]*) should hear nothing$\")\n    public void userShouldHearNothing(String user) throws Throwable {\n        Assert.assertEquals(0, shoutyHelper.getShoutsHeardBy(user).size());\n    }\n      \n    @Then(\"^([A-Z][a-z]*) should not hear ([A-Z][a-z]*)$\")\n    public void userShouldNotHearShouter(String user, String shouter) throws Throwable {\n        Assert.assertFalse(shoutyHelper.getShoutsHeardBy(user).containsKey(shouter)); \n    }\n    \n    @Then(\"^([A-Z][a-z]*) should hear ([A-Z][a-z]*)$\")\n    public void userShouldHearShouter(String user, String shouter) throws Throwable {\n        Assert.assertTrue(shoutyHelper.getShoutsHeardBy(user).containsKey(shouter));\n    }\n\n    @Then(\"^Lucy should hear (\\\\d+) shouts from Sean$\")\n    public void lucyShouldHearShoutsFromSean(int numShouts) throws Throwable {\n        Assert.assertTrue(shoutyHelper.getShoutsHeardBy(\"Lucy\").containsKey(\"Sean\"));\n        Assert.assertEquals(numShouts, shoutyHelper.getShoutsHeardBy(\"Lucy\").get(\"Sean\").size());\n    }\n    \n     @Given(\"^([A-Z][a-z]*) is at (\\\\d+), (\\\\d+)$\")\n    public void personIsAt(String person, int xCoord, int yCoord) throws Throwable {\n        shoutyHelper.setLocation(person, new Coordinate(xCoord, yCoord));\n    }\n    \n    @Given(\"^people are located at$\")\n    public void peopleAreLocatedAt(List<PersonLocation> personLocations) throws Throwable {\n        for (PersonLocation personLocation : personLocations) {\n            shoutyHelper.setLocation(personLocation.name, new Coordinate(personLocation.x, personLocation.y));\n        }\n    }\n    \n}\n","Shouty.java":"import java.util.*;\n\npublic class Shouty {\n  private static final int MESSAGE_RANGE = 1000;\n  private Map<String, Coordinate> locations = new HashMap<String, Coordinate>();\n  private Map<String, List<String> > shouts = new HashMap<String, List<String> >();\n\n  public void setLocation(String person, Coordinate location) {\n      locations.put(person, location);\n  }\n\n  public void shout(String shouter, String shout) {\n      if (!shouts.containsKey(shouter)) {\n          List<String> personsShouts = new ArrayList<String>();\n          shouts.put(shouter, personsShouts);\n      }\n\n      shouts.get(shouter).add(shout);\n  }\n\n  public Map<String, List<String> > getShoutsHeardBy(String listener) {\n      HashMap<String, List<String> > shoutsHeard = new HashMap<String, List<String> >();\n\n      for (Map.Entry<String, List<String> > entry : shouts.entrySet()) {\n          String shouter = entry.getKey();\n          if (shouter.equals(listener)) {\n              continue;\n          }\n          List<String> personsShouts = entry.getValue();\n          int distance = locations.get(listener).distanceFrom(locations.get(shouter));\n          if (distance < MESSAGE_RANGE)\n              shoutsHeard.put(shouter, personsShouts);\n      }\n\n      return shoutsHeard;\n  }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /cucumber/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi\n","cucumber.xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\">\n\n    <bean class=\"Shouty\" autowire-candidate=\"true\" scope=\"cucumber-glue\" />\n\n    <context:annotation-config/>\n\n\n</beans>\n","hear_shout.feature":"Feature: Hearing a shout\n\n    Shouts have a range of approximately 1000 metres\n    \n    Background:\n        Given Lucy is at 0, 0\n\n    Scenario Outline: only hear in-range shouts\n        Given Sean is at <Seans-location>\n        When Sean shouts\n        Then Lucy should hear <what-Lucy-hears>\n        \n        Examples: some simple examples\n        | Seans-location    | what-Lucy-hears   |\n        | 0, 900            | Sean              |\n        | 800, 800          | nothing           |\n        \n        \n      Scenario: Multiple shouters\n        Given people are located at\n        | name  | x     | y     |\n        | Lucy  | 0     | 0     |\n        | Sean  | 0     | 500   |\n        | Oscar | 1100  | 0     |\n\n        When Sean shouts\n        And Oscar shouts\n        Then Lucy should not hear Oscar\n        But Lucy should hear Sean\n        \n      Scenario: Shouters should not hear their own shouts\n        Given \n        When Lucy shouts\n        Then Lucy should hear nothing\n        \n      Scenario: Multiple shouts from one person\n        Given Sean is at 0, 500\n        When Sean shouts\n        And Sean shouts\n        Then Lucy should hear 2 shouts from Sean\n","output":"JUnit version 4.12\n.......................EEII......\nUndefined scenarios:\nhear_shout.feature:31 # Scenario: Shouters should not hear their own shouts\n\n5 Scenarios (1 undefined, 4 passed)\n23 Steps (2 skipped, 1 undefined, 20 passed)\n0m0.224s\n\nE\nTime: 1.5\nThere were 3 failures:\n1) Given (Scenario: Shouters should not hear their own shouts)\ncucumber.api.PendingException: TODO: implement me\n\tat cucumber.runtime.junit.JUnitReporter.addFailure(JUnitReporter.java:134)\n\tat cucumber.runtime.junit.JUnitReporter.addFailureOrIgnoreStep(JUnitReporter.java:122)\n\tat cucumber.runtime.junit.JUnitReporter.result(JUnitReporter.java:91)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:281)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:36)\n2) Scenario: Shouters should not hear their own shouts\ncucumber.api.PendingException: TODO: implement me\n\tat cucumber.runtime.junit.JUnitReporter.addFailure(JUnitReporter.java:134)\n\tat cucumber.runtime.junit.JUnitReporter.addFailureOrIgnoreStep(JUnitReporter.java:122)\n\tat cucumber.runtime.junit.JUnitReporter.result(JUnitReporter.java:91)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:281)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:36)\n3) null\njava.lang.IllegalArgumentException: Cannot create function name from empty sentence\n\tat cucumber.runtime.snippets.FunctionNameGenerator.removeIllegalCharacters(FunctionNameGenerator.java:22)\n\tat cucumber.runtime.snippets.FunctionNameGenerator.generateFunctionName(FunctionNameGenerator.java:13)\n\tat cucumber.runtime.snippets.SnippetGenerator.functionName(SnippetGenerator.java:76)\n\tat cucumber.runtime.snippets.SnippetGenerator.getSnippet(SnippetGenerator.java:45)\n\tat cucumber.runtime.java.JavaBackend.getSnippet(JavaBackend.java:145)\n\tat cucumber.runtime.UndefinedStepsTracker.getSnippets(UndefinedStepsTracker.java:32)\n\tat cucumber.runtime.Runtime.getSnippets(Runtime.java:193)\n\tat cucumber.runtime.DefaultSummaryPrinter.printSnippets(DefaultSummaryPrinter.java:36)\n\tat cucumber.runtime.DefaultSummaryPrinter.print(DefaultSummaryPrinter.java:21)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat cucumber.runtime.Utils$1.call(Utils.java:37)\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:13)\n\tat cucumber.runtime.Utils.invoke(Utils.java:31)\n\tat cucumber.runtime.RuntimeOptions$1.invoke(RuntimeOptions.java:290)\n\tat com.sun.proxy.$Proxy16.print(Unknown Source)\n\tat cucumber.runtime.Runtime.printSummary(Runtime.java:131)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:101)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:36)\n\nFAILURES!!!\nTests run: 29,  Failures: 3\n\nDec 05, 2017 1:00:47 PM org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\nINFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ba2f4ec: startup date [Tue Dec 05 13:00:47 GMT 2017]; root of context hierarchy\nDec 05, 2017 1:00:47 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\nINFO: Loading XML bean definitions from class path resource [cucumber.xml]\n","PersonLocation.java":"public class PersonLocation {\n  \n    public String name;\n    public int x;\n    public int y;\n    \n    \n}","LocationSteps.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport cucumber.api.java.en.*;\nimport cucumber.api.PendingException;\nimport java.util.List;\nimport org.springframework.beans.factory.annotation.*;\n\npublic class LocationSteps {\n    //@Autowired\n    //private ShoutyHelper shoutyHelper;\n    \n   \n    \n}","ShoutyHelper.java":"import org.springframework.stereotype.*;\nimport org.springframework.context.annotation.*;\nimport java.util.*;\n\n//@Component \n//@Scope(\"cucumber-glue\")\npublic class ShoutyHelper {\n    \n    private Shouty shouty = new Shouty();\n    \n    public void setLocation(String person, Coordinate location) {\n        shouty.setLocation(person, location);\n    }\n\n    public void shout(String shouter, String shout) {\n        shouty.shout(shouter, shout);\n    }\n\n    public Map<String, List<String> > getShoutsHeardBy(String listener) {\n        return shouty.getShoutsHeardBy(listener);\n    }\n}"}